[{"categories":["Caso prático"],"contents":"\rSe o seu negócio não está na internet, ele não existe!\rA frase acima pode ser pesada, mas vamos ser sinceros: quando você precisa de uma solução, eu aposto que você não procura no catálogo telefônico ou em um jornal.\nAs redes sociais são muito mais do que um simples entretenimento no nosso dia a dia.\nA verdade é que elas nos influenciam de várias maneiras: onde vamos, o que compramos, quais cursos escolhemos para nos dedicarmos e, até mesmo, influenciando o nosso estilo de vida.\nComo consequência disso, as redes sociais se tornaram uma ferramenta de trabalho para construir a imagem e o relacionamento de pessoas e empresas com os seus seguidores.\nMas já vou fazer uma consideração importante aqui antes de seguir com o post:\nSeguidor, likes, comentários e engajamento NÃO PAGAM A CONTA DE NINGUÉM.\nTer um milhão de seguidores não quer dizer ganhar muito dinheiro e ter 20 mil seguidores não significa ganhar pouco. Inclusive, já vi na prática perfil com 10 mil seguidores fazendo infinitamente mais dinheiro do que outro perfil de 1 milhão de seguidores.\nE, mesmo assim, eu acho importante e resolvi analisar as métricas do Instagram!\nEu acredito ser parte do processo de crescimento você saber com que tipo de conteúdo o seu nicho está se interessando e engajando mais.\nQual a chamada fazem os seguidores comentarem mais na publicação?\nQuem está crescendo mais nas mídias sociais e o que está fazendo pra isso?\nÉ importante analisar os próprios números e ter esse retorno sobre o conteúdo que foi gerado.\nMas também é interessante analisar os outros perfis que estão no mesmo nicho. Quais estão se saindo melhor ou pior e porque?\nPara responder todas essas perguntas, criei uma ferramenta para acompanhar alguns perfis do nicho de FINANÇAS.\nVocê poderá acompanhar:\n\rInformações gerais sobre o perfil (Seguidores, likes, comentários, engajamentos..)\n\rInformações de um perfil específico por dia (Ganhou ou perdeu seguidores?, engajamento, etc)\n\rInformações de cada post (todos os perfis ou escolher um específico)\n\rComparar os perfis\n\rOs dados são atualizados automaticamente, uma vez por dia.\r** Como sempre, a ferramenta foi 100% desenvolvida utilizando o R. :)\n\r\r\r\r","permalink":"/blog/acompanhamento-dos-perfis-do-instagram/","tags":["Marketing Digital","Shiny"],"title":"Acompanhamento dos perfis do Instagram"},{"categories":["Caso prático"],"contents":"\rÉ importante que eu já comece te avisando que esse post não é sobre vagas de emprego na área de Data Science. Embora tenha um conteúdo que será muito útil na sua carreira.\nVou te mostrar como eu busquei todas as vagas que estão sendo ofertadas no site de empregos indeed.com.br e apliquei Ciência de Dados.\nQual foi a aplicação de Ciência de Dados nesse trabalho?\n\rBusquei todas as vagas que são ofertadas no site Indeed (webscraping).\n\rLimpeza e organização desses dados.\n\rCriação de grupos para as vagas mais similares.\n\rCálculo do salário médio para cada grupo.\n\rQuais os principais requisitos de cada grupo.\n\r\rO que é webscraping?\rWebscraping é a captura de informações ou dados de um site.\nEntão, ferramentas de webscraping são robôs que vão acessar um site previamente definido, buscar as informações que foram designados e armazenar essas informações.\nTrazendo para o caso prático dessa semana, fiz um robô que entrou no site indeed.com.br e varreu todos os links relativos a vagas de emprego. Esse foi o primeiro passo.\nO segundo passo foi entrar em cada um desses links e realizar a busca de três informações: nome da vaga, salário oferecido e descrição da vaga.\nO processo de webscraping pode ser bastante demorado, considerando que o script irá acessar inúmeras páginas da internet.\n\rCriando grupos (clusters) a partir de texto\rUsei 4 métodos de agrupamento para separar as vagas de emprego em grupos. Portanto, podemos comparar como cada método separou as vagas e qual faz mais sentido.\nOs métodos utilizados para separar as vagas de emprego em grupos foram:\n\rK- means Clustering - Cada vaga de emprego pertencerá ao grupo com média mais próxima\rHierarquical Clustering - Inicialmente, cada vaga de emprego compõe um grupo. No último passo todas as vagas compõem o mesmo grupo. Portanto, o desafio é encontrar o ponto de corte ótimo entre o primeiro e último passo.\rDensity-based Clustering - Método não paramétrico de clusterização baseado na densidade.\rStacked Clustering - Método que utiliza os resultados dos 3 métodos acima.\r\rLogo na sequência disponibilizei todo o código utilizado.\n\rAplicação com os resultados\r\r\rWebscraping\rParte 1 - Buscar os links das páginas de cada vaga de emprego\r##### busca de links das vagas de emprego\rlibrary(readr) #chamar pacotes que serão utilizados\rlibrary(stringr)\rlibrary(plyr)\rlibrary(dplyr)\rlibrary(httr)\rtodos_links\u0026lt;-c()\rfor(pagina in c(\u0026quot;\u0026quot;,seq(1,50000,10))){ #Looping para buscar todas as páginas que tem links\rcon=url(paste0(\u0026quot;https://www.indeed.com.br/empregos?l=Brasil\u0026amp;start=\u0026quot;,pagina)) #cria a conexão com as páginas\r# player = readLines(con,encoding = \u0026quot;UTF-8\u0026quot;)\rlinks\u0026lt;-readLines(con,encoding = \u0026quot;UTF-8\u0026quot;,warn = F) #leitura do código fonte de cada página\rclose(con) #encerra a conexão com a página\rlinhas1\u0026lt;-grep(\u0026quot;href=\\\u0026quot;/page\u0026quot;,links)#buscar por um padrão que me mostra a linha do código que possui links\rlinhas2\u0026lt;-grep(\u0026quot;href=\\\u0026quot;/comp\u0026quot;,links)#buscar por um padrão que me mostra a linha do código que possui links\rlinhas3\u0026lt;-grep(\u0026quot;href=\\\u0026quot;/rc\u0026quot;,links)#buscar por um padrão que me mostra a linha do código que possui links\rlinhas\u0026lt;-c(linhas1,linhas2,linhas3)\rlinks_\u0026lt;-links[linhas] #filtro das linhas que possuem links\rtodos_links\u0026lt;-c(todos_links,links_)\r}\rtodos_links\u0026lt;-unique(todos_links) ## tirar links repetidos\rtodos_links$x\u0026lt;-gsub(\u0026quot;\\\u0026quot;href=\\\\\\\\\\\u0026quot;\u0026quot;,\u0026quot;\u0026quot;,todos_links$x) #limpar resultados\rtodos_links$x\u0026lt;-gsub(\u0026quot;\\\\\\\\\\\u0026quot;\\\u0026quot;\u0026quot;,\u0026quot;\u0026quot;,todos_links$x) #limpar resultados\rwrite.table(todos_links,\u0026quot;todos_links.txt\u0026quot;,sep=\u0026quot;\\t\u0026quot;,fileEncoding = \u0026quot;utf8\u0026quot;,row.names = F) #salvar resultado\r\rParte 2 - Buscar as informações de cada vaga de emprego\rlibrary(readr) #chamar pacotes que serão utilizados\rlibrary(stringr)\rlibrary(plyr)\rlibrary(dplyr)\rlibrary(httr)\ris.empty \u0026lt;- function(x) # Função que criei para analisar se um objeto é vazio\r{\ris.integer(x) \u0026amp;\u0026amp; length(x) == 0L\r}\rcleanFun \u0026lt;- function(htmlString) { # Função que limpa comandos da linguagem HTML\rreturn(gsub(\u0026quot;\u0026lt;.*?\u0026gt;\u0026quot;, \u0026quot;\u0026quot;, htmlString))\r}\rbase\u0026lt;-\u0026quot;https://www.indeed.com.br\u0026quot; #parte do link comum a todas as buscas\rtodos_links \u0026lt;- read_delim(\u0026quot;todos_links.txt\u0026quot;, \u0026quot;\\t\u0026quot;, escape_double = FALSE, trim_ws = TRUE)\rjobs_dt\u0026lt;-data.frame()\rfor(job in 1:nrow(todos_links)){ ######## looping para buscar as informações de cada vaga\rcon=url(paste0(base,todos_links$x[job])) # Conexão com a página da vaga\rjob_data\u0026lt;-readLines(con,encoding = \u0026quot;UTF-8\u0026quot;,warn = F) #leitura do código fonte\rclose(con) #encerrar conexão com a página\rlinha1\u0026lt;-grep(\u0026quot;rl\\\u0026quot;\u0026gt;\u0026lt;meta content=\\\u0026quot;\u0026quot;,job_data) ### buscar linhas que me trarão as informações linha2\u0026lt;-grep(\u0026quot;salaryText\\\u0026quot;\u0026quot;,job_data) ## para cada informação eu achei um padrão de texto que linha3\u0026lt;-grep(\u0026quot;jobsearch-jobDescriptionText\u0026quot;,job_data) ### sempre está junto no código fonte.\rlinha4\u0026lt;-grep(\u0026quot;zone-belowFullJobDescription\u0026quot;,job_data)\rlinhas\u0026lt;-c(linha1,linha2,linha3:linha4)\rjob_data\u0026lt;-job_data[linhas]\rtemp1\u0026lt;-str_match(job_data[1], \u0026quot;rl\\\u0026quot;\u0026gt;\u0026lt;meta content=\\\u0026quot;(.*?)\\\u0026quot;\u0026quot;)[,2]\rtemp2\u0026lt;-str_match(job_data[2], \u0026quot;salaryText\\\u0026quot;:\\\u0026quot;(.*?)\\\u0026quot;\u0026quot;)[,2]\rinicio\u0026lt;-is.empty(linha1)+is.empty(linha2)+1 ##evitar erro quando o valor do salário for ausente\rtemp3\u0026lt;-str_match(paste0(job_data[inicio:length(job_data)],collapse = \u0026#39; \u0026#39;), \u0026quot;jobsearch-jobDescriptionText\\\u0026quot;\u0026gt;\u0026lt;p\u0026gt;(.*?)\u0026lt;div class=\\\u0026quot;mosaic-zone\\\u0026quot; id=\\\u0026quot;mos\u0026quot;)[,2]\rtemp3\u0026lt;-as.character(cleanFun(temp3))\rjob_data[1]\u0026lt;-str_squish(temp1) # remove espaços sobrando no texto\rjob_data[2]\u0026lt;-str_squish(temp2)\rjob_data[3]\u0026lt;-str_squish(temp3)\r##### juntar os resultados de título da vaga, salário e descrição da vaga.\rjobs_dt\u0026lt;-rbind(jobs_dt,data.frame(X1=job_data[1],X2=job_data[2],X3=as.character(job_data[3]),stringsAsFactors = F))\r}\rjobs_dt_unicos\u0026lt;-unique(jobs_dt) #remover vagas identicas anunciadas mais de uma vez.\rjobs_dt_unicos\u0026lt;-jobs_dt_unicos[!is.na(jobs_dt_unicos$X3),]\r#salvar o resultado\rwrite.table(jobs_dt_unicos,\u0026quot;descricao_parcial_unica.txt\u0026quot;,sep=\u0026quot;\\t\u0026quot;,fileEncoding = \u0026quot;utf8\u0026quot;,row.names = F)\r\r\rParte 3 - Limpeza e organização dos dados\rlibrary(readr) ### #chamar pacotes que serão utilizados\rlibrary(plyr)\rlibrary(dplyr)\rlibrary(tidytext)\rlibrary(tm)\rlibrary(stringr)\rlibrary(magrittr)\rlibrary(wordcloud2)\r# ler dados que foram exatraídos na busca\rdescricao_parcial_unica \u0026lt;- read_delim(\u0026quot;ShinyApps/descricao_parcial_unica.txt\u0026quot;, \u0026quot;\\t\u0026quot;, escape_double = FALSE, trim_ws = TRUE)\r### limpeza dos dados\rdescricao_parcial_unica$salario2\u0026lt;-gsub(\u0026quot;.* - \u0026quot;,\u0026quot;\u0026quot;,descricao_parcial_unica$salario)\rdescricao_parcial_unica$salario2\u0026lt;-gsub(\u0026quot; por mês\u0026quot;,\u0026quot;\u0026quot;,descricao_parcial_unica$salario2)\rdescricao_parcial_unica$salario2\u0026lt;-gsub(\u0026quot;.* \u0026quot;,\u0026quot;\u0026quot;,descricao_parcial_unica$salario2)\rdescricao_parcial_unica$salario2\u0026lt;-ifelse(as.numeric(descricao_parcial_unica$salario2)\u0026gt;400,as.numeric(descricao_parcial_unica$salario2),as.numeric(descricao_parcial_unica$salario2)*1000)\rdescricao_parcial_unica$descricao2 \u0026lt;- sub(\u0026quot;http://([[:alnum:]|[:punct:]])+\u0026quot;, \u0026#39;\u0026#39;, descricao_parcial_unica$descricao)\rdescricao_parcial_unica$descricao2 \u0026lt;- sub(\u0026quot;R$\u0026quot;, \u0026#39;\u0026#39;, descricao_parcial_unica$descricao2)\rdescricao_parcial_unica$descricao2 \u0026lt;- sub(\u0026quot;r$\u0026quot;, \u0026#39;\u0026#39;, descricao_parcial_unica$descricao2)\r### Criação do Corpus que vamos analisar\rcorpus = tm::Corpus(tm::VectorSource(descricao_parcial_unica$descricao2)) ### remover stopwords\rcorpus.cleaned \u0026lt;- tm::tm_map(corpus, tm::removeWords, tm::stopwords(\u0026#39;portuguese\u0026#39;)) # Remover StopWords corpus.cleaned \u0026lt;- tm::tm_map(corpus, tm::stemDocument, language = \u0026quot;portuguese\u0026quot;) # Stemming\rcorpus.cleaned \u0026lt;- tm::tm_map(corpus.cleaned, tm::stripWhitespace) # Remover excesso de espaços\r\rParte 4 - Criação dos grupos para cada vaga de emprego\rtdm \u0026lt;- tm::DocumentTermMatrix(corpus.cleaned) tdm.tfidf \u0026lt;- tm::weightTfIdf(tdm)\rtdm.tfidf \u0026lt;- tm::removeSparseTerms(tdm.tfidf, 0.999) tfidf.matrix \u0026lt;- as.matrix(tdm.tfidf) # Matriz de Distância - Cosine\rdist.matrix = proxy::dist(tfidf.matrix, method = \u0026quot;cosine\u0026quot;)\r### MÉTODOS DE AGRUPAMENTO\rclustering.kmeans \u0026lt;- kmeans(tfidf.matrix, 40) #Criação dos grupos usando k-means | parâmetro de 40 grupos\rclustering.hierarchical \u0026lt;- hclust(dist.matrix, method = \u0026quot;ward.D2\u0026quot;) #Clusterização hierárquica\rclustering.dbscan \u0026lt;- dbscan::hdbscan(dist.matrix, minPts = 10) #Clusterização DBSCAN\rmaster.cluster \u0026lt;- clustering.kmeans$cluster ### Cálculo do Stacking Clustering considerando o k-means como master.\rslave.hierarchical \u0026lt;- cutree(clustering.hierarchical, k = 40) slave.dbscan \u0026lt;- clustering.dbscan$cluster stacked.clustering \u0026lt;- rep(NA, length(master.cluster)) names(stacked.clustering) \u0026lt;- 1:length(master.cluster) for (cluster in unique(master.cluster)) { indexes = which(master.cluster == cluster, arr.ind = TRUE) slave1.votes \u0026lt;- table(slave.hierarchical[indexes]) slave1.maxcount \u0026lt;- names(slave1.votes)[which.max(slave1.votes)] slave1.indexes = which(slave.hierarchical == slave1.maxcount, arr.ind = TRUE) slave2.votes \u0026lt;- table(slave.dbscan[indexes]) slave2.maxcount \u0026lt;- names(slave2.votes)[which.max(slave2.votes)] stacked.clustering[indexes] \u0026lt;- slave2.maxcount }\rpoints \u0026lt;- cmdscale(dist.matrix, k = 2) palette \u0026lt;- colorspace::diverge_hcl(40) # Creating a color palette previous.par \u0026lt;- par(mfrow=c(2,2), mar = rep(1.5, 4)) ##### gráficos dos resultados de cada um dos 4 métodos\rplot(points, main = \u0026#39;K-Means clustering\u0026#39;, col = as.factor(master.cluster), mai = c(0, 0, 0, 0), mar = c(0, 0, 0, 0), xaxt = \u0026#39;n\u0026#39;, yaxt = \u0026#39;n\u0026#39;, xlab = \u0026#39;\u0026#39;, ylab = \u0026#39;\u0026#39;) plot(points, main = \u0026#39;Hierarchical clustering\u0026#39;, col = as.factor(slave.hierarchical), mai = c(0, 0, 0, 0), mar = c(0, 0, 0, 0), xaxt = \u0026#39;n\u0026#39;, yaxt = \u0026#39;n\u0026#39;, xlab = \u0026#39;\u0026#39;, ylab = \u0026#39;\u0026#39;) plot(points, main = \u0026#39;Density-based clustering\u0026#39;, col = as.factor(slave.dbscan), mai = c(0, 0, 0, 0), mar = c(0, 0, 0, 0), xaxt = \u0026#39;n\u0026#39;, yaxt = \u0026#39;n\u0026#39;, xlab = \u0026#39;\u0026#39;, ylab = \u0026#39;\u0026#39;) plot(points, main = \u0026#39;Stacked clustering\u0026#39;, col = as.factor(stacked.clustering), mai = c(0, 0, 0, 0), mar = c(0, 0, 0, 0), xaxt = \u0026#39;n\u0026#39;, yaxt = \u0026#39;n\u0026#39;, xlab = \u0026#39;\u0026#39;, ylab = \u0026#39;\u0026#39;) par(previous.par) # recovering the original plot space parameters\rdescricao_parcial_unica$master.cluster\u0026lt;-as.factor(master.cluster)\rdescricao_parcial_unica$slave.hierarchical\u0026lt;-as.factor(slave.hierarchical)\rdescricao_parcial_unica$slave.dbscan\u0026lt;-as.factor(slave.dbscan)\rdescricao_parcial_unica$stacked.clustering\u0026lt;-as.factor(stacked.clustering)\r### salvar dados para usar na aplicação Shiny\rwrite.table(descricao_parcial_unica,\u0026quot;ShinyApps/dados_indeed.txt\u0026quot;,row.names = F,sep=\u0026quot;\\t\u0026quot;,fileEncoding = \u0026quot;utf8\u0026quot;)\r\rParte 5 - Visualização dos resultados\rlibrary(shiny)\rlibrary(plotly)\rlibrary(plyr)\rlibrary(dplyr)\rlibrary(magrittr)\rlibrary(readr)\rlibrary(wordcloud2)\rlibrary(stringr)\rlibrary(tm)\rlibrary(tidytext)\rsetwd(\u0026quot;~/ShinyApps\u0026quot;)\rdados_indeed \u0026lt;- read_delim(\u0026quot;dados_indeed.txt\u0026quot;, \u0026quot;\\t\u0026quot;, escape_double = FALSE, trim_ws = TRUE)\rchoices_metodo\u0026lt;-setNames(c(\u0026quot;master.cluster\u0026quot;,\u0026quot;slave.hierarchical\u0026quot;,\u0026quot;slave.dbscan\u0026quot;,\u0026quot;stacked.clustering\u0026quot;),\rc(\u0026quot;K-Means clustering\u0026quot;,\u0026quot;Hierarchical clustering\u0026quot;,\r\u0026quot;Density-based clustering\u0026quot;,\r\u0026quot;Stacked clustering\u0026quot;))\rui \u0026lt;- fluidPage(\rnavbarPage(\u0026quot;Vagas de Emprego - Indeed\u0026quot;,\rtabPanel(\u0026quot;Analise dos requisitos das vagas\u0026quot;,\rsidebarPanel(\rselectInput(\u0026quot;metodo\u0026quot;,\r\u0026quot;Escolha um método de agrupamento de texto\u0026quot;,\rchoices_metodo,selected = 2,width = \u0026quot;100%\u0026quot;),\r# place to hold dynamic inputs\rconditionalPanel(\rcondition = \u0026quot;input.metodo == \u0026#39;master.cluster\u0026#39;\u0026quot;,\rselectInput(\u0026quot;grupo1\u0026quot;, \u0026quot;Grupo de vagas\u0026quot;,\rsort(unique(dados_indeed$master.cluster)),selected = 1\r)),\rconditionalPanel(\rcondition = \u0026quot;input.metodo == \u0026#39;slave.hierarchical\u0026#39;\u0026quot;,\rselectInput(\u0026quot;grupo2\u0026quot;, \u0026quot;Grupo de vagas\u0026quot;,\rsort(unique(dados_indeed$slave.hierarchical)),selected = 1\r)),\rconditionalPanel(\rcondition = \u0026quot;input.metodo == \u0026#39;slave.dbscan\u0026#39;\u0026quot;,\rselectInput(\u0026quot;grupo3\u0026quot;, \u0026quot;Grupo de vagas\u0026quot;,\rsort(unique(dados_indeed$slave.dbscan)),selected = 1\r)),\rconditionalPanel(\rcondition = \u0026quot;input.metodo == \u0026#39;stacked.clustering\u0026#39;\u0026quot;,\rselectInput(\u0026quot;grupo4\u0026quot;, \u0026quot;Grupo de vagas\u0026quot;,\rsort(unique(dados_indeed$stacked.clustering)),selected = 1\r)),\rp(\u0026quot;\u0026quot;),\rh3(\u0026quot;Salário médio:\u0026quot;),\rhtmlOutput(\u0026quot;salario_\u0026quot;),\rh3(\u0026quot;Vagas oferecidas:\u0026quot;),\rhtmlOutput(\u0026quot;nomesvagas\u0026quot;)\r),\rmainPanel(\rwordcloud2Output(\u0026#39;wordcloud\u0026#39;, width = \u0026quot;100%\u0026quot;, height = \u0026quot;565px\u0026quot;)\r)\r)\r)\r)\rserver \u0026lt;- function(input, output,session) {\rmydata\u0026lt;- reactive({\rmydata\u0026lt;-dados_indeed\rmydata %\u0026lt;\u0026gt;% select(descricao2,input$metodo)\rvagas\u0026lt;- dados_indeed %\u0026gt;% select(cargo,salario2,input$metodo)\rgrupo\u0026lt;-if(input$metodo==\u0026#39;master.cluster\u0026#39;){input$grupo1}else\rif(input$metodo==\u0026#39;slave.hierarchical\u0026#39;){input$grupo2}else\rif(input$metodo==\u0026#39;slave.dbscan\u0026#39;){input$grupo3}else\rif(input$metodo==\u0026#39;stacked.clustering\u0026#39;){input$grupo4}\rmydata\u0026lt;-mydata[mydata[,2]==grupo,]\rvagas\u0026lt;-vagas[vagas[,3]==grupo,]\rmydata$descricao2\u0026lt;- str_replace_all(mydata$descricao2, \u0026quot;\\\\.|,|/|:\u0026quot;,\u0026quot; \u0026quot;)\rmydata$descricao2\u0026lt;- gsub(\u0026#39;[[:digit:]]+\u0026#39;, \u0026#39;\u0026#39;, mydata$descricao2)\rmydata %\u0026lt;\u0026gt;% unnest_tokens(word, descricao2) stopwords\u0026lt;-data.frame(word=c(stopwords(kind = \u0026quot;pt\u0026quot;),stopwords(kind = \u0026quot;en\u0026quot;),\u0026quot;vaga\u0026quot;,\u0026quot;tempo\u0026quot;,\u0026quot;r\u0026quot;,\u0026quot;R\u0026quot;))\rstopwords$word\u0026lt;-as.character(stopwords$word)\rmydata %\u0026lt;\u0026gt;% anti_join(stopwords)%\u0026gt;%\rcount(word, sort = TRUE)\rsalario\u0026lt;-round(mean(vagas$salario2,na.rm=T),2)\rvagas\u0026lt;-vagas$cargo\rlist(mydata,vagas,salario)\r})\routput$wordcloud \u0026lt;- renderWordcloud2({\rwordcloud2(mydata()[[1]], size=0.5)\r})\routput$nomesvagas \u0026lt;- renderUI({ # mydata\u0026lt;-mydata[mydata[,2]==0,]\rHTML(paste(mydata()[[2]],\u0026quot;\u0026lt;/br\u0026gt;\u0026quot;))\r})\routput$salario_ \u0026lt;- renderUI({\rHTML(paste(\u0026quot;R$\u0026quot;,mydata()[[3]]))\r})\r}\rshinyApp(ui = ui, server = server)\r\r","permalink":"/blog/aplicacao-de-ciencia-de-dados-nas-vagas-de-emprego/","tags":["Cluster","Text Mining","Webscraping"],"title":"Aplicação de Ciência de Dados nas vagas de emprego"},{"categories":["Caso prático"],"contents":"\r\r\r\r\rÉ um desafio encontrar uma área que não possa ser melhorada pela Ciência de Dados.\nUm fator que ajuda muito nisso é o aumento exponencial da capacidade de medir e gerar dados, seja qual for a área.\nConfesso a vocês que, até parar pra fazer esse artigo, nunca tinha imaginado haver tantos dados sobre músicas, álbuns e bandas.\nNo caso desse post, isso só foi viável pela excelente API que o Spotify possui. Ela fornece uma quantidade muito interessante de informações sobre cada música, album ou artista.\nO que também facilitou muito o trabalho foi a biblioteca spotifyR. Uma verdadeira mão na roda para acessar os dados da API do Spotify pelo R.\nQuanto mais subjetiva for a matéria de estudo, maior será a dificuldade de aplicar modelos estatísticos, por exemplo.\nA música está dentro de um ramo artístico, portanto, um pouco longe das ciências exatas.\nE, ainda assim, é possível aplicar Ciência de Dados! E com muito sucesso.\nO Spotify possui sistemas de recomendação muito apurados em seu aplicativo. Então, com base no que você escuta, ele consegue te recomendar músicas e artistas que sejam alinhados com o seu gosto.\nImagino que uma parte desse modelo de recomendação seja composto pelos atributos que eles tem para cada música.\nQue atributos são esses?\nPara cada música o Spotify atribui valores entre 0 e 100 para vários atributos. Vou listar alguns:\n\rAcústica\rDançabilidade\rSonoridade\rEnergia\rDiscurso\rInstrumentalidade\rAo vivo\rPositividade\r\rAinda que se tenha algumas aplicações práticas muito interessantes da Ciência de Dados na música, não obtive sucesso em todas as minhas tentativas.\nFoi muito interessante perceber em gráficos quais as músicas mais tristes ou alegres de uma banda ou ver o modelo do Spotify rodando e nos ajudando a descobrir artistas que combinam muito com nosso gosto musical.\nPorém, na minha extremamente breve tentativa de tentar achar um modelo para prever quais seriam as músicas de sucesso de uma banda, os resultados não foram tão satisfatórios.\nA minha análise usando os dados do Spotify\rFiz uma enquete lá no Instagram perguntando para o pessoal quais bandas gostariam que eu fizesse uma análise mais detalhada.\nAs vencedoras foram: Queen, U2, Pink Floyd e Red Hot Chili Peppers.\nPeguei os valores da positividade e energia das músicas de cada uma dessas 4 bandas e montei o gráfico abaixo.\rInclui apenas as músicas do álbum principal de cada uma das bandas.\nApesar das bandas não terem estilos musicais muito distantes, é possível notar padrões nos quadrantes criados.\nDividi o gráfico com as classificações: Tristeza, Agitação/raiva, Alegria/Excitação e Tranquilidade.\nCada ponto do gráfico é uma canção do álbum. Os álbuns escolhidos foram:\n\rU2, The Joshua Tree\rQueen, Live At Wembley Stadium\rPink Floyd, The Later Years\rRed Hot Chili Peppers, Californication\r\r\rCódigo e mais análises\rAgora vou compartilhar outras análises que fiz e o código utilizado.\nPasso 1 - Instalar/Chamar bibliotecas e autenticação\rlibrary(tidyverse)\rlibrary(spotifyr)\rlibrary(genius)\rlibrary(tidytext)\rlibrary(gridExtra)\rlibrary(wordcloud2)\rlibrary(dplyr)\rlibrary(ggplot2)\rlibrary(highcharter)\rlibrary(RColorBrewer)\rlibrary(randomForest)\r# Você precisa criar as suas credenciais no Spotify e colocá-las aqui:\rSys.setenv(SPOTIFY_CLIENT_ID = \u0026#39;XXXXXXXXXXXXXXXXXXXXXXXXXXXXX\u0026#39;)\rSys.setenv(SPOTIFY_CLIENT_SECRET = \u0026#39;XXXXXXXXXXXXXXXXXXXXXXXXXX\u0026#39;)\r# Para criar o seu acesso a API de desenvolvedor do Spotify, siga os passos em:\r# https://developer.spotify.com/dashboard/login\rBuscar o token de autenticação\naccess_token \u0026lt;- get_spotify_access_token()\r\rBuscar e limpar os dados\rEssa função busca no Spotify as principais informações de todas as músicas da banda que você escolher.\nNo caso, escolhi o U2.\nbanda \u0026lt;- get_artist_audio_features(\u0026#39;u2\u0026#39;) ### Buscar os dados\r# Forças as algumas variáveis a serem da Classe de Fatores\rbanda$mode_name \u0026lt;- as.factor(banda$mode_name)\rbanda$key_name \u0026lt;- as.factor(banda$key_name)\rbanda$key_mode \u0026lt;- as.factor(banda$key_mode)\rbanda$album_name \u0026lt;- as.factor(banda$album_name)\rbanda$album_name \u0026lt;- as.factor(banda$album_name)\r# tirar musicas repetidas\rbanda\u0026lt;-banda[!duplicated(banda$track_name),]\r# tirar albuns repetidos\rbanda\u0026lt;-dedupe_album_names(banda, album_name_col = \u0026quot;album_name\u0026quot;,\ralbum_release_year_col = \u0026quot;album_release_year\u0026quot;)\r\rPrincipais músicas e álbuns\rAgora, busquei no Spotify quais são as músicas de mais sucesso da banda. Eles retornam as 10 músicas mais ouvidas.\n# buscar músicas de maior sucesso no mercado Americano\rtop_tracks\u0026lt;-get_artist_top_tracks(id=banda$artist_id[1], market = \u0026quot;US\u0026quot;,\rauthorization = get_spotify_access_token(),\rinclude_meta_info = TRUE)$tracks\r# criar uma coluna na tabela informando se a música é top track ou não.\rbanda \u0026lt;- banda %\u0026gt;%\rmutate(topsongs = ifelse(tolower(substr(banda$track_name, start = 1, stop = 11)) %in%\rtolower(substr(top_tracks$name, start = 1, stop = 11)), 1,0))\rbanda$topsongs \u0026lt;- as.factor(banda$topsongs)\rDefinindo quais são os principais albuns da banda.\n# Defini que os os principais albuns são aqueles que tem alguma música de sucesso\rmain_albuns\u0026lt;-banda %\u0026gt;% filter(topsongs==1) %\u0026gt;%\rselect(album_name)\rbanda_albums \u0026lt;- banda[banda$album_name %in% main_albuns$album_name,]\rbanda \u0026lt;- banda %\u0026gt;%\rmutate(topalbum = ifelse(album_name %in% main_albuns$album_name , 1,0))\rbanda$topalbum \u0026lt;- as.factor(banda$topalbum)\r\r\rVisualização de dados\rVamos começar a nossa visualização de dados analisando o sentimento das letras cantadas.\nBusquei as 20 palavras mais cantadas no album e separamos as palavras em positivas e negativas.\nMas você concorda que palavras negativas podem ter intensidades muito diferentes?\nPor exemplo, a palavra cortar é entendida como uma palavra negativa. Porém, sua intensidade é muito menor do que a de outras palavras negativas como veneno ou fogo.\nEntão, além de separar as palavras em positivas e negativas, vamos dar um score para cada sentimento.\nmain_albuns$album_name\u0026lt;-as.character(main_albuns$album_name)\rindicador\u0026lt;-names(which.max(table(main_albuns$album_name))[1])\rbanda_1 \u0026lt;- banda %\u0026gt;%\rfilter(album_name == indicador)\rbanda_1 \u0026lt;- banda_1[order(banda_1$tempo),] #sort\rbanda_1$track_name \u0026lt;- factor(banda_1$track_name, levels = unique(banda_1$track_name))\r#Creating a variable called D1 which contains all of the lyrics from Drake\u0026#39;s album \u0026quot;Thank Me Later\u0026quot;\rD1 \u0026lt;- genius_album(artist = banda$artist_name[1], album = banda_1$album_name[1])\r#Using the piping operator to create a count of the most popular words in the album D1 %\u0026gt;% unnest_tokens(word, lyric) %\u0026gt;% anti_join(stop_words) %\u0026gt;% count(word, sort = TRUE) -\u0026gt; D1Count\r#Using more piping operators to create afinn sentiment as well as create a subset of the data that includes the top 20 most popular words D1Count %\u0026gt;% inner_join(get_sentiments(\u0026quot;afinn\u0026quot;)) -\u0026gt; D1Sentiment\rD1Sentiment %\u0026gt;% head(20) -\u0026gt; D1Sentiment2\r#Creating a column called color that uses an if else statment to color the sentiment score by red if it is below 0 and green if it is above\rD1Sentiment2$color \u0026lt;- ifelse(D1Sentiment2$value \u0026lt; 0, \u0026quot;red\u0026quot;, \u0026quot;green\u0026quot;)\r#Creating a bar graph that shows each sentiment. The \u0026quot;color=color\u0026quot; in the ggplot() and scale_color_identity() are what allow the graph to color by red and green based off of the ifelse statement.\rsentimento1 \u0026lt;- ggplot(D1Sentiment2, aes(reorder(word, -n), value, color=color)) + geom_col(fill=\u0026quot;white\u0026quot;) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) +\rlabs(title=paste0(banda$artist_name[1],\u0026quot; - \u0026quot;,banda_1$album_name[1]), x=\u0026quot;20 palavras mais cantadas\u0026quot;, y=\u0026quot;Score do sentimento\u0026quot;) +\rtheme(plot.title = element_text(size=15,hjust = 0.5)) +\rscale_color_identity()\rsentimento1\rAs nuvens de palavras ou wordclouds são uma ótima ferramenta para visualizar quais palavras são mais frequentes.\nwordcloud2(data = D1Count)\r\r{\"x\":{\"word\":[\"love\",\"rise\",\"heart\",\"day\",\"night\",\"hey\",\"hold\",\"walk\",\"rain\",\"gold\",\"sky\",\"run\",\"wind\",\"sweetest\",\"america\",\"blue\",\"desert\",\"yeah\",\"deep\",\"left\",\"ohohoh\",\"silver\",\"angel\",\"blessed\",\"eyes\",\"red\",\"cold\",\"door\",\"feel\",\"fire\",\"hear\",\"rainin\",\"sea\",\"hands\",\"hill\",\"set\",\"soul\",\"baby\",\"break\",\"bullet\",\"country\",\"found\",\"god's\",\"hang\",\"tonight\",\"town\",\"wey\",\"blown\",\"hangin\",\"light\",\"lights\",\"runs\",\"song\",\"streets\",\"sun\",\"waiting\",\"white\",\"alright\",\"black\",\"broken\",\"burning\",\"dry\",\"ho\",\"mao\",\"naked\",\"river\",\"rose\",\"shiny\",\"stars\",\"stone\",\"till\",\"wanna\",\"bright\",\"burned\",\"city\",\"crosses\",\"earth\",\"flame\",\"free\",\"ground\",\"hand\",\"healing\",\"heartbeat\",\"kings\",\"lips\",\"sister\",\"sleep\",\"sunlight\",\"tin\",\"walls\",\"water\",\"wave\",\"world\",\"arms\",\"beating\",\"callin\",\"chained\",\"crooked\",\"darkest\",\"daylight\",\"devil\",\"doorway\",\"drug\",\"fighter\",\"floor\",\"gonna\",\"home\",\"inside\",\"live\",\"losin\",\"ooh\",\"round\",\"rust\",\"sad\",\"shines\",\"sold\",\"sons\",\"sorrow\",\"stand\",\"storm\",\"time\",\"umm\",\"wait\",\"beaten\",\"beneath\",\"bird\",\"bleed\",\"blood\",\"blowing\",\"captains\",\"chains\",\"children\",\"colours\",\"comin\",\"coming\",\"cure\",\"cut\",\"desire\",\"dream\",\"dreams\",\"dust\",\"faith\",\"fall\",\"feeling\",\"fever\",\"field\",\"finger\",\"garden\",\"golden\",\"green\",\"gun\",\"head\",\"heat\",\"holy\",\"honey\",\"hot\",\"hunter\",\"leaves\",\"nails\",\"neck\",\"ocean\",\"reach\",\"rising\",\"save\",\"scream\",\"shoes\",\"sick\",\"spanish\",\"tears\",\"thunder\",\"torn\",\"tree\",\"trees\",\"year's\",\"africa\",\"ah\",\"ahead\",\"alight\",\"ancient\",\"begin\",\"bent\",\"bind\",\"blind\",\"body\",\"bows\",\"boy\",\"bring\",\"building\",\"cain\",\"calls\",\"canvas\",\"capital\",\"ceiling\",\"closed\",\"clothes\",\"cloud\",\"collect\",\"corner\",\"crawling\",\"crawls\",\"cross\",\"dark\",\"daughters\",\"deeper\",\"die\",\"distance\",\"dreamed\",\"dreamers\",\"dress\",\"eyed\",\"fallen\",\"father\",\"fear\",\"feet\",\"forever\",\"gift\",\"heartbeats\",\"heavy\",\"hit\",\"holdin\",\"hole\",\"hope\",\"hotel\",\"howling\",\"hundred\",\"hunted\",\"hurts\",\"jesus\",\"letters\",\"liberty\",\"likes\",\"lose\",\"lost\",\"mind\",\"mister\",\"moon\",\"morning\",\"navy\",\"nettle\",\"newspapers\",\"nose\",\"ohh\",\"pain\",\"painted\",\"past\",\"planes\",\"power\",\"praying\",\"prisoners\",\"prize\",\"punch\",\"quiet\",\"race\",\"raincloud\",\"rescue\",\"return\",\"ribbons\",\"rivers\",\"roadside\",\"rope\",\"royal\",\"sealed\",\"shackles\",\"shadows\",\"shame\",\"shelter\",\"shore\",\"shotgun\",\"shut\",\"silence\",\"sing\",\"sinister\",\"siren\",\"skies\",\"slowly\",\"son\",\"souls\",\"south\",\"stands\",\"starry\",\"steel\",\"sting\",\"stop\",\"street\",\"talk\",\"tear\",\"temperature\",\"thin\",\"thirsty\",\"thorn\",\"told\",\"trigger\",\"trip\",\"true\",\"twist\",\"uniforms\",\"valley\",\"vanity\",\"voice\",\"warden\",\"wash\",\"wet\",\"window\",\"wires\",\"wore\",\"written\",\"ya\",\"17\",\"1956\",\"act\",\"alleys\",\"angelic\",\"angels\",\"apartheid\",\"argue\",\"argument\",\"arise\",\"artist\",\"artists\",\"astray\",\"atom\",\"avalanche\",\"awake\",\"awhile\",\"baby's\",\"ball\",\"bard\",\"barrel\",\"bass\",\"bed\",\"begs\",\"begun\",\"billboards\",\"bills\",\"bishop\",\"blankets\",\"bleeding\",\"blossoms\",\"blues\",\"bomb\",\"bonds\",\"bones\",\"born\",\"bother\",\"bottle\",\"breathes\",\"breeze\",\"bride\",\"brightly\",\"broke\",\"brown\",\"bruised\",\"bug\",\"buggin\",\"build\",\"bullets\",\"burn\",\"burnin\",\"burroughs\",\"bush\",\"buy\",\"calling\",\"captain\",\"car\",\"cardboard\",\"carnival\",\"carried\",\"carved\",\"catch\",\"caverns\",\"cedar\",\"cents\",\"chain\",\"cherry\",\"child\",\"children's\",\"chill\",\"chorus\",\"chosen\",\"cities\",\"city's\",\"climbed\",\"clothed\",\"coal\",\"coat\",\"coloured\",\"control\",\"corn\",\"cracked\",\"crash\",\"crawl\",\"crawled\",\"creep\",\"cries\",\"crossed\",\"crowd\",\"crown\",\"cruel\",\"cruelty\",\"cry\",\"cryin\",\"danger\",\"darkness\",\"dazzled\",\"deaf\",\"demands\",\"demon\",\"dew\",\"dewy\",\"dirt\",\"disappear\",\"discover\",\"disease\",\"dog\",\"dollar\",\"dollars\",\"doorstep\",\"doubt\",\"drive\",\"drivin\",\"drum\",\"drums\",\"ears\",\"economic\",\"edge\",\"eggs\",\"ego\",\"em\",\"emotion\",\"emperor\",\"empty\",\"enduring\",\"entwined\",\"eternal\",\"evening\",\"everyday\",\"exit\",\"exit's\",\"facing\",\"fail\",\"falling\",\"fate\",\"fell\",\"fields\",\"firefly\",\"fist\",\"flames\",\"flood\",\"flower\",\"flush\",\"follow\",\"form\",\"friend\",\"frozen\",\"fuck\",\"future\",\"gapin\",\"gathered\",\"girl\",\"glass\",\"glow\",\"god\",\"gotta\",\"grass\",\"grave\",\"groan\",\"hair\",\"hangs\",\"hard\",\"haze\",\"heard\",\"hearted\",\"hearts\",\"heh\",\"held\",\"hell's\",\"helps\",\"heyyy\",\"hide\",\"hills\",\"holds\",\"hour\",\"house\",\"howlin\",\"hum\",\"human\",\"huts\",\"india\",\"inherit\",\"injured\",\"insane\",\"invented\",\"jacob\",\"january\",\"jara\",\"johannesburg\",\"joke\",\"jokes\",\"jumping\",\"key\",\"king\",\"kingdom\",\"kiss\",\"kissed\",\"kneel\",\"knees\",\"labour\",\"land\",\"lands\",\"lapsed\",\"laughter\",\"leave\",\"legs\",\"libraries\",\"life\",\"lifted\",\"lines\",\"link\",\"listen\",\"locust\",\"lone\",\"loneliness\",\"lonely\",\"loosed\",\"love's\",\"low\",\"lyric\",\"machinery\",\"makes\",\"mass\",\"meek\",\"meet\",\"meets\",\"memories\",\"menelik\",\"merciful\",\"mercy\",\"midnight\",\"million\",\"mine\",\"months\",\"morn\",\"mountain\",\"mountains\",\"mud\",\"murder\",\"music\",\"necklace\",\"nobility\",\"north\",\"obsession\",\"oooh\",\"oppressor\",\"orange\",\"overcome\",\"overcomes\",\"path\",\"pay\",\"peacemakers\",\"peelin\",\"pelting\",\"penny\",\"perfect\",\"petal\",\"pistol\",\"plain\",\"plant\",\"play\",\"plum\",\"pocket\",\"poem\",\"poets\",\"poison\",\"pole\",\"poor\",\"pound\",\"practical\",\"precious\",\"prisoner\",\"pull\",\"pulls\",\"pushing\",\"putting\",\"queen\",\"rainfall\",\"raise\",\"rape\",\"rattle\",\"read\",\"ready\",\"real\",\"recall\",\"recalls\",\"record\",\"refuse\",\"remain\",\"renew\",\"request\",\"ripped\",\"rises\",\"roses\",\"rubber\",\"runnin\",\"running\",\"saint\",\"sanctions\",\"sand\",\"sang\",\"saxophone\",\"scaled\",\"scared\",\"scars\",\"scent\",\"scorch\",\"scratch\",\"scrolls\",\"seam\",\"seed\",\"send\",\"seraphim\",\"settle\",\"sew\",\"sex\",\"shadow\",\"shakin\",\"shanty\",\"shape\",\"sheba's\",\"shepherd\",\"shine\",\"ship's\",\"ships\",\"shit\",\"shithouse\",\"sight\",\"sink\",\"skin\",\"slappin\",\"sleight\",\"slipstream\",\"slumberous\",\"slums\",\"speak\",\"speaks\",\"speedway\",\"spirit\",\"split\",\"spoke\",\"staircase\",\"stairway\",\"standing\",\"start\",\"started\",\"stay\",\"steven\",\"stingin\",\"stooped\",\"stormy\",\"strand\",\"straw\",\"stretched\",\"stripped\",\"stumble\",\"stupid\",\"sugar\",\"suit\",\"suitcase\",\"summerhill\",\"sunshine\",\"supermarket\",\"support\",\"sweet\",\"swim\",\"tangiers\",\"telling\",\"thee\",\"thirty\",\"thou\",\"throat\",\"thrones\",\"throws\",\"tie\",\"tied\",\"tight\",\"tiny\",\"tips\",\"tongue\",\"touch\",\"trace\",\"trampled\",\"trial\",\"trotskyites\",\"truth\",\"tutu\",\"twenty\",\"unbuttoned\",\"understand\",\"underway\",\"undone\",\"unlock\",\"verse\",\"views\",\"wafer\",\"wake\",\"walked\",\"walking\",\"war\",\"warm\",\"watery\",\"waves\",\"weapon\",\"wear\",\"weeping\",\"weighed\",\"west\",\"wheel\",\"wide\",\"wilt\",\"win\",\"window's\",\"wisdom\",\"women\",\"word\",\"worker's\",\"worn\",\"worthy\",\"wound\",\"wounded\",\"wrestled\",\"write\",\"yeahhhh\",\"yeahhhhhh\",\"yeahhhhhhh\",\"yep\",\"york\",\"zone\",null],\"freq\":[73,50,24,22,21,20,19,19,18,17,17,16,16,15,14,14,13,13,12,12,12,12,11,11,11,11,10,10,10,10,10,10,10,9,9,9,9,8,8,8,8,8,8,8,8,8,8,7,7,7,7,7,7,7,7,7,7,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],\"fontFamily\":\"Segoe UI\",\"fontWeight\":\"bold\",\"color\":\"random-dark\",\"minSize\":0,\"weightFactor\":2.46575342465753,\"backgroundColor\":\"white\",\"gridSize\":0,\"minRotation\":-0.785398163397448,\"maxRotation\":0.785398163397448,\"shuffle\":true,\"rotateRatio\":0.4,\"shape\":\"circle\",\"ellipticity\":0.65,\"figBase64\":null,\"hover\":null},\"evals\":[],\"jsHooks\":{\"render\":[{\"code\":\"function(el,x){\\n console.log(123);\\n if(!iii){\\n window.location.reload();\\n iii = False;\\n\\n }\\n }\",\"data\":null}]}}\rPor fim, coloquei em um gráfico os valores de energia e positividade de cada música do principal album da banda.\nartist_quadrant_chart(banda_1) %\u0026gt;% hc_add_event_point(event = \u0026#39;mouseOver\u0026#39;)\r\r","permalink":"/blog/musica-e-possivel-aplicar-ciencia-de-dados/","tags":["Música","Text Mining"],"title":"Música | É possível aplicar Ciência de Dados?"},{"categories":["Caso prático"],"contents":"\rO que é Google Trends?\rUma quantidade absurda de buscas são feitas diariamente no Google. Afinal, sempre que precisamos tirar uma dúvida, a primeira solução que pensamos é procurar no Google! Certo?\nO Google Trends é uma excelente ferramenta do Google que nos informa quais são as buscas mais frequentes.\nAlém disso, em alguns segundos você consegue gerar um relatório que mostra a frequência de busca das palavras que você escolher ao longo de um período.\nVocê pode adequar o seu relatório do Google Trends por país ou até por estado.\nTambém é possível filtrar as buscas para um período específico, definido por você.\nOutra função disponível é a comparação da frequência que dois ou mais termos foram buscados.\nPor exemplo, você pode gerar um relatório comparando as frequências de buscas por “Coca Cola” e “Pepsi” no estado de São Paulo considerando os últimos 90 dias.\nA ferramenta do Google também mostra as buscas relacionadas aos termos escolhidos.\n\rPra que serve o Google Trends?\rO Google Trends é uma ferramenta simples, porém com resultados muito valiosos.\nSaber o que as pessoas procuram na internet é uma excelente forma de estar atento as tendências e necessidades das pessoas.\nConhecer o que clientes buscam no Google é literalmente conhecer suas necessidades e dores. É um excelente caminho para se antecipar ao mercado.\nOutra utilidade é saber se a sua marca está sendo mais ou menos procurada pelas pessoas ao longo do tempo. E o mesmo vale para analisar o seu concorrente.\n\rÉ possível aplicar o Google Trends na Saúde?\rEntre 2008 e 2015 o Google teve um projeto chamado Google Flu Trends.\nO projeto previa surtos de gripe e dengue em 25 países e chegou a acertar suas previsões com uma precisão de 97% para surtos de grupo nos EUA.\nA quantidade de indivíduos gripados era fornecida pelo Centers for Disease Control and Prevention (Centro de prevenção e controle de doenças).\nAs previsões se baseavam no seguinte:\nAntes das pessoas procurarem médicos ou hospitais, elas procuram informações sobre seus sintomas no GOOGLE.\nEm 2008 foi publicado um artigo sobre o Google Flu Trends na conceituada revista Nature relatando que, quando as pessoas estavam gripadas, primeiramente procuravam no Google informações relacionadas aos sintomas.\nIsso gerava sinais quase instantâneos de indivíduos gripados, caracaterizando surtos de gripe quando a quantidade de buscas era maior.\nAproveitando isso tudo, fiz uma comparação entre termos muito buscados no Google e relacionei com os CASOS CONFIRMADOS e MORTES de Corona aqui no BRASIL.\nSerá que faz sentido?\n\r\r","permalink":"/blog/e-possivel-prever-pandemias-usando-o-google-trends/","tags":["Shiny"],"title":"É possível prever pandemias usando o Google Trends?"},{"categories":["Caso prático"],"contents":"\rUma marca de roupas, uma rede de lanchonetes, uma marca de bebidas ou de itens de higiene podem gastar centenas de milhares de reais para fazer UM anúncio na televisão.\nOu até gastar um pouco menos e colocar placas em lugares estratégicos, como placas em aeroportos ou outdoors.\nIsso sempre funcionou e ainda é uma estratégia muito utilizada. Mas qual o problema nisso?\nEu mesmo, com exceção dos jogos de futebol, não vejo os tradicionais canais de televisão desde que a Grande Família acabou.\nPode não ser o seu caso, mas o tempo dedicado a televisão da forma tradicional está sendo substituído pela Internet. Seja pelos aplicativos de relacionamento (Facebook/Instagram), comunicação (Whatsapp), Youtube ou Netflix.\nAntes quando a gente estava dentro de um carro, parávamos para olhar para fora e víamos Outdoors. Hoje, muitas vezes, até o próprio motorista está olhando o celular.\nO anúncio ou propaganda de uma marca precisa chamar a atenção das pessoas e hoje a atenção das pessoas está na palma da mão, no celular!\nComo funciona um anúncio no Facebook?\rPara que a gente entenda exatamente como analisar cada resultado que eu vou te apresentar aqui, vou passar por 3 conceitos básicos de um anúncio para o Facebook ou Instagram.\nCampanha\rImagine que você precise aumentar o tráfego do seu site, isto é, levar mais gente pra visitar o seu site. Então o primeiro passo vai ser criar uma campanha para esse OBJETIVO.\nA característica que melhor define uma campanha no Facebook é o seu OBJETIVO.\nO objetivo de uma campanha pode ser:\n\rTráfego para o site\rInstalações de aplicativo\rVisualização de vídeo\rEnvolver com o seu conteúdo\rConversões\r\r…entre outros\n\rConjunto de anúncios\rDentro de uma campanha, temos vários conjuntos de anúncio. De forma simplificada, é como se cada conjunto de anúncio fosse um público para quem você quer anunciar.\nA ferramenta permite que você crie vários públicos com características específicas, por exemplo:\n\rpessoas que visitaram seu site no mês passado\rpessoas que engajaram com a sua página do Instagram\rpessoas que estão em sua lista de e-mail\rpessoas com o perfil parecido dos seus clientes\rpessoas que se interessam pelo tema da sua marca\r\r\rOs anúncios\rOs anúncios são as imagens ou vídeos que vemos o tempo todo no Instagram ou Facebook. Aqueles posts que ficam com o aviso de “Patrocinado”.\nNa organização da campanha, os anúncios ficam dentro de um conjunto de anúncios. Mas você pode colocar o mesmo anúncio para vários conjuntos/públicos e ver como ele se comporta em cada um deles.\n\r\rComo podemos aplicar Data Science nos anúncios do Facebook e Instagram?\rCom certeza o ponto inicial para a aplicação de Data Science no Face e Insta é pela visualização de dados.\nPrimeiramente, precisamos explorar como está o desempenho de cada anúncio e de cada público para atingir o objetivo definido pela campanha.\nUm anúncio pode performar muito bem para um público e pode não atrair as pessoas que formam um público diferente.\nOu então, um público está com a conversão muito alta, mas outro público não está interagindo com os seus anúncios.\nNesse caso o que precisamos fazer?\nO primeiro passo seria adaptar os orçamentos! Tirar boa parte do dinheiro que está sendo investido no público que está interagindo pouco com os anúncios e transferir esse orçamento para o público que está performando acima do esperado.\nEssa simples alteração provavelmente vai evitar muito desperdício de dinheiro e otimizar muito as conversões.\nAgora vou te mostrar a ferramenta que desenvolvi para explorar todas as informações das Campanhas no Instagram de um projeto que tenho envolvendo Futebol e Data Science.\nA ferramenta foi desenvolvida usando os dados da API do Facebook, a linguagem de Data Science R e a biblioteca Shiny.\nA partir dela eu consigo fazer várias comparações, saber o que está funcionando melhor e fazer as otimizações necessárias.\n\r\r","permalink":"/blog/marketing-digital-a-importancia-da-ciencia-de-dados-nas-campanhas-facebook-instagram/","tags":["Shiny","Marketing Digital"],"title":"Marketing Digital | A importância da ciência de dados nas Campanhas do Facebook e Instagram"},{"categories":["Post"],"contents":"\rDe acordo com o relatório do Fórum Econômico Mundial, a ciência de dados é a profissão mais promissora no Brasil entre 2020 e 2022.\nO Linkedin também considerou a profissão entre as 5 que mais crescem no Brasil.\nCertamente não é uma moda que vai passar. A era digital torna extremamente fácil a coleta de dados.\nAfinal de contas passamos horas e horas em nossos celulares e computadores todos os dias. Essas são apenas duas formas de gerar dados.\nEstima-se que 90% dos dados do mundo tenham sido criados nos últimos dois anos. Segundo a Oracle, o número de dispositivos conectados no mundo deve crescer para mais de 75 bilhões até 2025.\nAfinal, não nos conectamos na internet apenas em nossos computadores, como era antigamente. Mas também com nossos celulares, televisões, video-games, sistemas de automação da casa e, daqui a pouco, até com a geladeira!\nE, que esses dados gerados são super valiosos, não podemos ter dúvidas! :)\nQual a utilidade da Ciência de dados?\rQuanto vale para uma empresa saber que uma pessoa tem exatamente as mesmas características de seus melhores clientes?\nTambém é extremamente valioso para um e-commerce saber exatamente o que recomendar para um cliente que acabou de realizar uma compra. Os sistemas de recomendação são muito utilizados dentro da Ciência de Dados.\nE eles não são utilizados apenas no e-commerce, você certamente já viu os sistemas de recomendação em ação no Youtube ou no Netflix! Quando você termina de assistir um vídeo ou então uma série, você já recebe uma recomendação do próximo!\nSão artifícios que as plataformas utilizam para reter seus usuários. Quanto mais elas forem precisas nas recomendações, mais conseguirão manter os usuários.\nA ciência de dados também pode ser utilizada no mercado financeiro para tentar prever quais serão os investimentos mais rentáveis em curto, médio e longo prazo. Ou até mesmo com ferramentas de visualização de dados, para auxiliar os especialistas em suas análises.\nNa área de saúde, por exemplo, a ciência de dados vem sendo utilizada com sucesso para interpretar exames de imagem e se mostrado mais precisa do que os próprios médicos especialistas.\nAté pouco tempo atrás, a cultura analítica buscava analisar os dados para saber o que estava acontecendo.\nA Ciência de Dados propõe usar os dados não só para saber o que está acontecendo, mas também para prever ou até mesmo melhorar o que irá acontecer.\rEssa melhoria pode ser representada por mais vendas, mais tempo usando uma plataforma/rede social ou até mesmo escutando músicas novas que você goste mais no Spotify.\n\r\rQuais são as principais atividades de um Cientista de Dados?\rO cientista de dados pode atuar em várias áreas, desde a otimização de vendas como a cura de doenças. Porém, algumas atividades serão comuns em todas essas áreas:\n\rColetar, organizar e limpar grandes quantidades de dados\n\rAnalisar situações do negócio, formular hipóteses e entender junto com especialistas da área qual problema deve ser resolvido\n\rCriar uma solução para o problema, realizar testes e aperfeiçoar a solução\n\rComunicação com as outras áreas envolvidas\n\r\r\rQual o salário de um cientista de dados?\rSegundo o site glassdoor.com - plataforma internacional de recrutamento - o salário médio de um cientista de dados no Brasil é de R$ 7.657/mês.\nO site salario.com.br calculou que a média salarial da categoria é de R$ 7.059,77.\nPelo guia de salários da empresa global de recrutamento especializado Michael Page, o salário mínimo de um cientista de dados em uma empresa pequena ou média é de R$ 9.000 e pode chegar até a R$ 12.000. Para empresas grandes o salário varia entre R$ 12.000 e R$ 15.000.\nJá o site viacarreira.com é ainda mais otimista e afirma que o salário do cientista de dados varia de R$ 12.000 a R$ 22.000.\nInteressou pela carreira? O objetivo aqui do blog é ajudar as pessoas a saírem do zero e construírem a sua carreira como cientista de dados. Conte comigo, estou à sua disposição em minhas redes sociais ou e-mail (contato@luisotavio.pro).\n\r","permalink":"/blog/o-que-e-ciencia-de-dados/","tags":["R","Primeiros passos"],"title":"O que é ciência de dados?"},{"categories":["Caso prático"],"contents":"\rVocê sabe o que é análise de sentimentos e porque ela é INDISPENSÁVEL para uma marca?\rAnálise de sentimentos é uma técnica para identificar se as opiniões sobre determinado assunto estão sendo positivas ou negativas.\nEsse “assunto” pode ser o discurso de um político, um jogador de futebol, uma celebridade, a sua empresa ou o produto que ela acabou de lançar.\nImagine que a sua empresa lançou um produto novo no mercado… Provavelmente vão querer saber o que as pessoas estão falando sobre ele e se a repercussão foi boa ou ruim.\nA análise de sentimentos ganhou muita importância por dois fatores:\n\rCrescimento gigantesco das redes sociais nos últimos anos.\rNecessidade das empresas em acompanharem de forma automatizada o que seus clientes falam sobre ela.\r\rNo caso de uma empresa, todos os feedbacks serão de extrema importância para ajustar um produto que foi lançado. Nada será mais rápido e honesto do que o resultado nas redes sociais.\nEm questão de segundos, os usuários que já estarão com o celular na mão, irão voluntariamente expor suas opiniões nas redes sociais.\nAlém disso, não há muito constrangimento. A internet nos permite sair de uma live sem pedir licença ou falar o que não gostamos sem ficar inibido porque a pessoa envolvida está em nossa frente.\nO que quero dizer é: o feedback das redes sociais será mais rápido e sincero do que em uma pesquisa presencial, por exemplo. Na pesquisa há uma grande tendência da pessoa amenizar o feedback simplesmente pelo fato de ter uma pessoa na frente e ninguém desejar parecer deselegante.\nEntão, imagine a importancia para uma empresa saber o que estão falando de seus produtos e de seus posicionamentos. É uma consultoria gratuita que está disponível para as empresas nas redes sociais, com várias sugesões e feedbacks.\n\rO que estão falando da sua empresa ou do seu artista favorito?\rO principal objetivo aqui do Blog é colocar a mão na massa e, principalmente, te mostrar como fazer isso.\nEscolhi analisar os dados do Twitter. Sabe porque?\nNenhuma outra rede social tem tantas pessoas dando opinião sobre os acontecimentos como no próprio Twitter.\nNo final desse post coloquei o passo-a-passo que usei e qual foi o raciocínio usado na ferramenta de análise de sentimentos desenvolvida para esse post.\nClique aqui para ir direto ao raciocínio utilizado.\nVamos divertir um pouco aqui pesquisando sobre O SEU TEMA DE INTERESSE.\r\r\r\rPASSO 1 - ACESSO A API DO TWITTER\rO tem uma ferramenta para facilitar a busca das informações que fazemos na plataforma deles, o que torna a tarefa mais fácil e rápida.\nCaso você queira criar a sua própria busca, praticando no seu computador, terá que se cadastrar no Twitter como um desenvolvedor. É bem fácil e leva poucos minutos.\nAqui nesse endereço você tem todas as instruções:\rhttps://cran.r-project.org/web/packages/rtweet/vignettes/auth.html\nlibrary(rtweet)\r#substitua os 4 valores seguintes pelos valores correspondentes ao seu login\r# api_key \u0026lt;- \u0026quot;XXXXXXXXX\u0026quot;\r# api_secret_key \u0026lt;- \u0026quot;XXXXXXXXX\u0026quot;\r# access_token \u0026lt;- \u0026quot;XXXXXXXXX\u0026quot;\r# access_token_secret \u0026lt;- \u0026quot;XXXXXXXXX\u0026quot;\r## authenticate via web browser\rtoken \u0026lt;- create_token(\rapp = \u0026quot;nome do seu app\u0026quot;, #substituir\rconsumer_key = api_key,\rconsumer_secret = api_secret_key,\raccess_token = access_token,\raccess_secret = access_token_secret)\r\rPASSO 2 - FAZER A BUSCA DESEJADA NO TWITTER\r#vamos buscar os últimos 1000 tweets com a palavra \u0026quot;globo\u0026quot; e sem incluir os retweets\rinput\u0026lt;-\u0026quot;globo\u0026quot;\rbusca_twitter \u0026lt;- search_tweets(input,n = 1000, include_rts = F)\r\rPASSO 3 - LIMPAR O TEXTO ENCONTRADO\r library(magrittr)\rlibrary(dplyr)\rbusca_twitter %\u0026lt;\u0026gt;% select(screen_name,text,source) #Selecionar colunas\r#remover links busca_twitter$texto_limpo\u0026lt;-gsub(\u0026quot;http\\\\S+\u0026quot;,\u0026quot;\u0026quot;,busca_twitter$text)\rbusca_twitter$texto_limpo \u0026lt;- gsub(\u0026#39;@([a-z|A-Z|0-9|_])*\u0026#39;, \u0026#39;\u0026#39;, busca_twitter$texto_limpo) # remove palavras com @ (menções)\rbusca_twitter$texto_limpo \u0026lt;- gsub(\u0026#39;_\u0026#39;, \u0026#39; \u0026#39;, busca_twitter$texto_limpo) # troca underline por espaço\r# remove pontuação\rbusca_twitter$texto_limpo = gsub(\u0026#39;[[:punct:]]\u0026#39;, \u0026#39; \u0026#39;, busca_twitter$texto_limpo)\r# remove espaços desnecessários\rbusca_twitter$texto_limpo = gsub(\u0026#39;[ \\t]{2,}\u0026#39;, \u0026#39; \u0026#39;, busca_twitter$texto_limpo)\rbusca_twitter$texto_limpo = gsub(\u0026#39;^\\\\s+|\\\\s+$\u0026#39;, \u0026#39; \u0026#39;, busca_twitter$texto_limpo)\r# remove emojis e caracteres especiais\rbusca_twitter$texto_limpo = gsub(\u0026#39;\u0026lt;.*\u0026gt;\u0026#39;, \u0026#39; \u0026#39;, enc2native(busca_twitter$texto_limpo))\r# remove quebra de linha\rbusca_twitter$texto_limpo = gsub(\u0026#39;\\\\n\u0026#39;, \u0026#39; \u0026#39;, busca_twitter$texto_limpo)\r# coloca tudo em minúsculo\rbusca_twitter$texto_limpo = tolower(busca_twitter$texto_limpo)\r# remove tweets duplicados\rbusca_twitter \u0026lt;- busca_twitter[!duplicated(busca_twitter$texto_limpo),]\r\rPASSO 4 - CARREGAR AS BASES DE DADOS QUE DEFINEM SE A PALAVRA É POSITIVA OU NEGATIVA\r library(lexiconPT)\rdata(\u0026quot;oplexicon_v3.0\u0026quot;)\rdata(\u0026quot;sentiLex_lem_PT02\u0026quot;)\rop30 \u0026lt;- oplexicon_v3.0\rsent \u0026lt;- sentiLex_lem_PT02\rnames(op30)[1]\u0026lt;-\u0026quot;word\u0026quot;\rnames(sent)[1]\u0026lt;-\u0026quot;word\u0026quot;\r\rPASSO 5 - MANIPULAÇÃO DE DADOS\r library(tidytext)\rlibrary(tm)\rbusca_twitter %\u0026lt;\u0026gt;% mutate(tweet_id = row_number()) #Cria um id para cada Tweet\r# Criar uma linha para cada palavra de um tweet\rtweets.input_stem\u0026lt;-busca_twitter %\u0026gt;% select(texto_limpo,tweet_id) %\u0026gt;% unnest_tokens(word,texto_limpo)\r#remover stopwords\rstop_words_pt\u0026lt;-data.frame(word=(stopwords(kind = \u0026quot;pt\u0026quot;)))\rstop_words_pt$word\u0026lt;-as.character(stop_words_pt$word)\rtweets.input_stem \u0026lt;- tweets.input_stem %\u0026gt;% anti_join(stop_words_pt)\r#remover palavras com duas letras\rtweets.input_stem %\u0026lt;\u0026gt;% filter(sapply(tweets.input_stem$word,nchar)\u0026gt;2)\r\rPASSO 6 - CORRELAÇÃO ENTRE AS PALAVRAS - Quais são as palavras que geralmente aparecem juntas?\rlibrary(widyr)\rlibrary(igraph)\rlibrary(ggraph)\rcorrelacao \u0026lt;- tweets.input_stem %\u0026gt;%\rgroup_by(word) %\u0026gt;%\rfilter(n() \u0026gt; 40) %\u0026gt;%\rpairwise_cor(word, tweet_id, sort = TRUE)\rcorrelacao %\u0026gt;%\rfilter(correlation \u0026gt; .10) %\u0026gt;% #FILTRANDO APENAS QUANDO A CORRELAÇÃO É MAIOR QUE 0,10 - ESCOLHA SEU CRITÉRIO\rgraph_from_data_frame() %\u0026gt;%\rggraph(layout = \u0026#39;fr\u0026#39;) + guides(edge_alpha = \u0026quot;none\u0026quot;, edge_width = \u0026quot;none\u0026quot;) +\rscale_edge_colour_gradientn(limits = c(-1, 1), colors = c(\u0026quot;firebrick2\u0026quot;, \u0026quot;dodgerblue2\u0026quot;)) +\rgeom_edge_link(aes(edge_alpha = correlation), show.legend = FALSE) + geom_node_point(color = \u0026#39;lightblue\u0026#39;, size = 5) + geom_node_text(aes(label = name), repel = TRUE) + theme_graph() +\rlabs(title = \u0026quot;Palavras que geralmente apareceram juntas\u0026quot;) \r\rPASSO 7 - TOP 5 - PALAVRAS RELACIONADAS QUE MAIS APARECEM\r tweets.input_stem %\u0026gt;% count(word, sort = T) %\u0026gt;% top_n(5) %\u0026gt;%\rmutate(word = reorder(word,n)) %\u0026gt;%\rggplot(aes(x = word, y=n)) + geom_col() +\rxlab(NULL) +\rcoord_flip() +\rtheme_classic() +\rlabs(x = \u0026quot;\u0026quot;,\ry = \u0026quot;Qnt. aparições\u0026quot;,\rtitle = paste0(\u0026quot;Palavras que aparecem nos tweets com a palavra \u0026quot;,input,\u0026quot;.\u0026quot;))\r\rPASSO 8 - SEPARANDO AS PALAVRAS EM SENTIMENTOS POSITIVOS E NEGATIVOS\r sentimentos\u0026lt;-tweets.input_stem %\u0026gt;% inner_join(op30, by = \u0026quot;word\u0026quot;) %\u0026gt;% inner_join(sent %\u0026gt;% select(word, lex_polarity = polarity), by = \u0026quot;word\u0026quot;) %\u0026gt;% group_by(word) %\u0026gt;% summarise(\rtweet_sentiment_op = sum(polarity),\rtweet_sentiment_lex = sum(lex_polarity),\rn_words = n()\r) sentimentos%\u0026lt;\u0026gt;%filter(tweet_sentiment_op!=0)\rsentimentos$sentimento\u0026lt;-ifelse(sentimentos$tweet_sentiment_op\u0026gt;0,\u0026quot;positivo\u0026quot;,\u0026quot;negativo\u0026quot;)\rsentimentos %\u0026lt;\u0026gt;% select(word,sentimento,n_words)\rsentimentos %\u0026gt;% group_by(sentimento) %\u0026gt;%\rtop_n(5) %\u0026gt;%\rungroup() %\u0026gt;%\rmutate(word = reorder(word,n_words)) %\u0026gt;%\rggplot(aes(word,n_words,fill=sentimento))+\rgeom_col(show.legend = FALSE) +\rfacet_wrap(~sentimento,scales =\u0026quot;free_y\u0026quot;) +\rlabs(title= paste0(\u0026quot;Palavras relacionadas a busca: \u0026quot;,input),\ry = \u0026quot;Qnt. vezes que usaram a palavra\u0026quot;,\rx = NULL) +\rcoord_flip() + theme_bw()\r\r","permalink":"/blog/analise-de-sentimentos-descubra-o-que-estao-falando-da-sua-empresa/","tags":["Text Mining","Análise de sentimentos"],"title":"Análise de Sentimentos - Descubra o que estão falando da sua empresa"},{"categories":["Caso prático"],"contents":"\rDe forma bem simplificada, a bolsa de valores brasileira vai refletir os resultados da economia do país.\nTradicionalmente, isso quer dizer que se uma empresa está bem organizada, com poucas dívidas e vendendo bem, ou com grande potencial futuro, muitos investidores irão querer comprar ações dessa empresa para se tornarem sócios.\nEsse não é bem o momento que estamos vivendo agora. A incerteza, a diminuição da produção e menos pessoas consumindo fizeram as bolsas de valores de todo o mundo despencarem.\nEssa semana o tema da vez é Bolsa de Valores. Então, bora aplicar Data Science!\nUsaremos a visualização de dados para comparar os resultados de cada empresa com o resultado geral da Bolsa de Valores ou com fundos da própria bolsa.\nTambém poderemos comparar com a Bolsa dos Estados Unidos, para ter uma comparação com um indicador global.\nE, claro, você irá escolher o período dessa análise.\nAntes disso, vou explicar os conceitos usados…\nO que são os índices o IBOV ou S\u0026amp;P 500?\rAs bolsas de valores negociam ações de várias empresas, certo?\nEm um dia normal, várias empresas irão se valorizar e várias outras irão perder valor.\nEntão, com várias subidas e descidas no dia, existe um índice para determinar se, no geral, a bolsa teve um resultado positivo ou negativo no final do dia.\nNo caso do Brasil, o principal índice é chamado de Índice Bovespa (IBOV).\nO Índice é composto por 64 ações das principais empresas da bolsa brasileira, que correspondem a cerca de 80% das negociações.\nO S\u0026amp;P 500, é o índice mais abrangente para o mercado norte americano.\nO Índice leva em consideração as 500 maiores empresas com ações comercializadas nos Estados Unidos.\n\rO que é um ETF?\rETF é acrônimo para Exchange Traded Fund. Eles são fundos que replicam a carteira desenhada por determinado índice.\nNa prática são uma coleção de ações ou títulos de empresas.\nEsses fundos são negociados pela própria bolsa brasileira (B3), de forma semelhante às ações.\nA grande vantagem do ETF é conseguir diversificar seus investimentos com uma única compra.\nAlguns ETFs usados aqui na nossa comparação:\n\rBOVA11 – Esse ETF replica a performance do Índice Bovespa\rBBSD11 – Esse ETF reúne as empresas que, historicamente, são as maiores pagadoras de dividendos da Bolsa.\rMATB11 – Esse ETF representa o desempenho médio dos ativos de empresas do setor de materiais básicos. Ele inclui áreas como a fabricação de papel, mineração, siderurgia, entre outros.\r\rAproveite para explorar a ferramenta desenvolvida no R para comparar algumas ações com o Ibovespa ou comparar ETFs com o Índice americano S\u0026amp;P500. Enfim, como você quiser!\nAfinal de contas esse pacote usado para desenvolver a ferramenta é interativo e uma das suas maiores vantagens é deixar o usuário escolher o que ele deseja visualizar!\nEm breve vou disponibilizar aqui o código que usei para construir essa e as outras ferramentas, assim você pode ir melhorando cada uma delas e deixar com a sua cara! :)\nQualquer dúvida, mande um e-mail para contato@luisotavio.pro.\n\r\r","permalink":"/blog/e-assim-que-estao-essas-acoes-da-bolsa-de-valores/","tags":["shiny","R"],"title":"É assim que estão essas ações da Bolsa de Valores!"},{"categories":["Post"],"contents":"\rNesse post você vai aprender 5 formas diferentes de como filtrar os dados da sua tabela no R.\nSão várias as razões que você pode precisar filtrar os seus dados em uma análise de dados:\n\rVisualizar as 50 primeiras linhas da sua tabela\rVisualizar todos os registros que possuem um determinado valor para a variável X\rExcluir todos os registros que tenham a variável Y igual a 2, por exemplo…\rOu até mesmo buscar uma amostra aleatória dos seus dados.\r\rPorém, alguns métodos são mais adequados que os outros, dependendo do seu objetivo.\nEntão, vou falar aqui todas as 5 maneiras e quando usar cada uma delas.\nEm nossos exemplos, vou usar o dataset iris que já é carregado automaticamente no R.\nFiltro de dados pelas linhas e colunas\rEssa a é a forma mais simples de selecionar dados do seu dataset. E, na minha opinião, deve ser usada com muita cautela.\nO nosso dataset se chama iris, então quando escrevemos o comando\nsubset_iris1\u0026lt;-iris[1:30,]\restamos selecionando as linhas de 1 a 30 do dataset iris.\nQuando abrimos os colchetes depois do dataset, temos dois campos separados pela vírgula. Informamos quais as linhas que queremos selecionar antes da vírgula.\nDepois da vírgula informamos quais as colunas queremos selecionar. Como deixei em branco, o R irá retornar todas as colunas do dataset.\nAgora, se eu colocar o comando\nsubset_iris1\u0026lt;-iris[,c(1,3,5)]\rO R irá retornar todas as linhas do dataset iris (pois o campo antes da vírgula está vazio) e irá selecionar as colunas 1, 3 e 5, pois essas foram as colunas que eu coloquei no vetor das colunas.\nVocê também pode combinar os critérios das linhas e colunas ao mesmo tempo. Desta forma, é possível até escolher até um único elemento contido na tabela. Por exemplo:\nCaso você deseje saber qual o valor da 90ª linha para a coluna 5, o comando será o seguinte:\nsubset_iris1\u0026lt;-iris[90,5]\rMas porque eu disse que o método deve ser usado com cautela?\nPorque, como você viu, ele é extremamente manual. Então, será útil caso você precise pesquisas ou explorações isoladas.\nMas, de forma alguma, recomendo que você use esse método para fazer alterações no seu banco de dados que precisem ser generalizadas para todos os dados.\n\rExcluir dados pelas linhas e colunas\rPara excluir determinadas linhas ou colunas, vamos usar o mesmo raciocínio do item anterior.\nVamos colocar o nome do dataset e os colchetes. Dentro dos colchetes iremos colocar na mesma ordem: primeiro as linhas e depois da vírgula colocamos as colunas.\nPorém, como queremos excluir as linhas/colunas, iremos colocar um sinal de “-” antes dos números.\nPor exemplo, se queremos excluir as linhas 10, 11 e 12 do dataset e excluir a coluna 4, o comando será:\nsubset_iris2\u0026lt;-iris[-(10:12),-4]\rE, da mesma forma, se queremos excluir linhas e colunas salteadas, colocamos os números dentro da função de vetor c().\nsubset_iris2\u0026lt;-iris[-c(10,50,90),-c(1,3)]\rEntão, o comando acima retornou o dataset iris sem as linhas 10, 50 e 90 e também excluiu as colunas 1 e 3.\n\rFiltro de dados combinando a função which()\rEsse método, assim como os seguintes, já podem ser usados em grandes bases de dados de forma segura. Mesmo que você não veja ou conheça todas as linhas da tabela.\nO filtro se aplicará por uma condição que vamos estabelecer.\nAntes de aplicar o filtro, vou explicar rapidamente como funciona a lógica da função which().\nA função which() irá retornar um vetor com o número das linhas que atendem a condição que você estabeleceu.\nPor exemplo:\nwhich(iris$Sepal.Length\u0026gt;6)\r## [1] 51 52 53 55 57 59 64 66 69 72 73 74 75 76 77 78 87 88 92\r## [20] 98 101 103 104 105 106 108 109 110 111 112 113 116 117 118 119 121 123 124\r## [39] 125 126 127 128 129 130 131 132 133 134 135 136 137 138 140 141 142 144 145\r## [58] 146 147 148 149\rO comando acima irá retornar todas as linhas do dataset iris que possuem um valor maior que 6 para a coluna Sepal.Length.\nSe o comando irá retornar um vetor com todas as linhas que queremos escolher, podemos adaptar a função _which() no 1º método falado aqui e selecionar as linhas que precisamos.\nOu seja:\nsubset_iris3\u0026lt;-iris[which(iris$Sepal.Length\u0026gt;6),]\r\rFiltro de dados usando a função subset()\rVocê vai perceber que a função subset() é bem intuitiva. Ela só precisa de 3 argumentos.\n\rO primeiro argumento que você irá colocar na função é o nome do dataset.\n\rDepois, você irá colocar a condição para cada linha que será filtrada.\n\rE, por último, quais as colunas que devem permanecer no dataset que você está criando.\n\r\rVamos supor que a gente deseje montar um novo dataset chamado “setosa”.\nNele, vamos filtrar apenas os registros do dataset iris que tenham a variável “Species” igual a “setosa”.\nVou escolher também só as 3 primeiras colunas para o meu novo dataset.\nsetosa_dataset\u0026lt;-subset(iris,Species==\u0026quot;setosa\u0026quot;,select = c(\u0026quot;Sepal.Length\u0026quot;,\u0026quot;Sepal.Width\u0026quot;,\u0026quot;Petal.Length\u0026quot;))\rOU\nsetosa_dataset\u0026lt;-subset(iris,Species==\u0026quot;setosa\u0026quot;,1:3)\rCaso você não queira excluir nenhuma coluna, não coloque o último argumento:\nsetosa_dataset\u0026lt;-subset(iris,Species==\u0026quot;setosa\u0026quot;)\r\rFiltrar usando a função filter() e select()\rAs funções filter e select fazem parte da biblioteca dplyr.\nEsse pacote é essencial para manipulação de dados. Então, se você ainda tem ele no R, baixe agora mesmo usando o comando:\ninstall.packages(\u0026quot;dplyr\u0026quot;)\rPara carregar o pacote, você precisar rodar o comando library(dplyr)\nÉ importante saber que você irá usar o comando “filter” para filtrar as LINHAS e o comando “select” para selecionar as COLUNAS.\n\rFunção filter()\r\rVocê precisa informar duas coisas para a função:\r-\u0026gt; Quais os dados você deseja usar (sua tabela)\r-\u0026gt; Quais as condições para filtrar os dados\nVamos filtrar aqui novamente de acordo com a variável “Species” do dataset iris.\nAgora vou filtrar todos os registros da espécie “virginica”.\nlibrary(dplyr)\rvirginica_dataset\u0026lt;-filter(iris,Species==\u0026quot;virginica\u0026quot;)\rBem simples! Mas e se a gente quiser combinar mais de uma condição?\nNesse caso, podemos usar dois operadores lógicos para combinar as condições: E e OU.\nCaso a gente precise que as duas condições aconteçam ao mesmo tempo, usaremos a condição E (representada pelo \u0026amp;)\nCaso a gente precise que aconteça uma condição OU a outra, usaremos a condição OU (representada pelo |) - nesse caso, só excluiremos caso não aconteça nenhuma das duas condições.\nVamos supor que precisamos filtrar os registros da espécie “versicolor” e que tenham a variável “Sepal.Length” maior que 6.\nlibrary(dplyr)\rversicolor_dataset\u0026lt;-filter(iris,Species==\u0026quot;versicolor\u0026quot; \u0026amp; Sepal.Length\u0026gt;6)\r\rFunção select()\r\rA função select é muito útil para escolher quais as colunas iremos manter em nosso dataset.\nAssim como a função filter(), ela só precisa de dois argumentos.\nO primeiro argumento também será o dataset que você irá selecionar as colunas.\nO segundo argumento é a coluna que deseja selecionar. Claro que você pode querer selecionar várias colunas, não tem problema. Veja só:\nVamos selecionar as colunas Sepal.Length e Species do dataset iris.\nlibrary(dplyr)\rselect_dataset\u0026lt;-select(iris,Sepal.Length,Species)\rEntão esse comando irá salvar no “select_dataset” todas as linhas do dataset iris, mas apenas as colunas que você selecionou.\nEspero que essas 5 formas de filtrar as linhas e colunas de seus datasets sejam bem úteis na sua manipulação dos dados e até a próxima! :)\n\r","permalink":"/como-filtrar-os-seus-dados-no-r/","tags":["arquivo de texto","CSV","TXT"],"title":"5 maneiras de filtrar os seus dados no R"},{"categories":["Caso prático"],"contents":"\rO Corona virus está se espalhando pelo mundo e isso é inevitável.\nTem sido feito um grande esforço para que o vírus se espalhe da forma mais lenta possível. Assim, os sistemas de saúde de todos os países não ficariam sobrecarregados e evitariam receber uma demanda impossível atender de forma simultânea.\nSó se fala nisso e vamos aqui usar o R para monitorar como a doença está se espalhando pelos países a cada dia que passa.\n\rQuais são os países mais afetados no começo da epidemia?\n\rE agora? Quem são os recordistas em novos casos de Corona Vírus?\n\rQuantos novos casos foram registrados no Brasil HOJE?\n\r\rTodas essas perguntas serão respondidas aqui em uma aplicação simples no R.\nMuito provavelmente o número de infectados no Brasil ainda irá aumentar, antes que comece a diminuir.\nA China, berço da doença, já declarou que o pico de infectados já passou. Ou seja, o número de pessoas infectadas no país asiático diminui a cada dia que passa.\nA comunidade científica tem se empenhado muito em amenizar e até solucionar a Pandemia.\nA Universidade americana Johns Hopkins tem feito um ótimo trabalho de monitoramento da doença.\nPara complementar o trabalho da Universidade, o Dr. Fabach utilizou o R e uma das minhas bibliotecas favoritas (o Shiny) para mostrar de forma totalmente interativa:\n\rQuantidade de novos casos em determinado período\rQuantidade de novos casos em determinado período divido pela população do país\rTotal de casos\rTotal de casos dividido pela população do país\r\rEu reproduzi o trabalho do Dr. Fabach aqui no blog, para que possam acompanhar.\nCaso queira dar uma olhada no código desenvolvido por ele, está disponível nesse link.\nQuando for analisar o mapa abaixo, lembre de escolher o intervalo de dias que você deseja pesquisar. E também não esqueça de clicar em cima do país para ter mais informações.\nQualquer dúvida, mande um e-mail para contato@luisotavio.pro.\nRECOMENDO TAMBÉM QUE ASSISTA O VÍDEO QUE GRAVEI SOBRE ESSE POST. CLIQUE AQUI\n\r","permalink":"/blog/monitorando-o-corona-virus-com-o-r/","tags":["maps","shiny"],"title":"Monitorando o Corona Virus com o R"},{"categories":["Post"],"contents":"\rO R é o queridinho dos estudantes e profissionais que buscam analisar dados, construir modelos ou Dashboards com autonomia e facilidade.\nAliás, a autonomia e personalização para cada caso, são as maiores vantagens de usar linguagens de programação.\nMas e porque o R está tão em alta?\nVou citar aqui os 7 principais motivos que eu vejo para você usar o R.\n1 - Facilidade\rO R é a linguagem ideal para quem não tem experiência em programação.\nCom poucas horas de estudo, o usuário já consegue escrever os seus primeiros comandos. Mesmo que não tenha nenhuma base prévia de outra linguagem de programação.\nÉ possível escrever modelos estatísticos com apenas UMA linha de programação.\nE, além da linguagem ser bem intuitiva, possui um excelente suporte da comunidade de usuários.\n\r2 - Voltado para Data Science e Estatística, porém abrange várias áreas.\rO que você precisa provavelmente já está desenvolvido no R e você precisará de muito pouco para chegar ao seu objetivo.\nDigo isso porque o R é um software prioritariamente estatístico, mas é aplicado em uma infinidade de áreas.\nExemplos de áreas que possuem ferramentas específicas dentro do R: econometria, business intelligence, saúde, machine learning, biologia, demografia, visualização de dados e muitas, muitas outras.\nIsso só é possível porque o R é um software de Código Aberto (Open Source). Entre outras vantagens, ele tem esse rótulo por ser livre (não é necessário adquirir uma licença) e também por ser aberto para contribuições dos usuários.\n\r3 - Comunidade\rVocê não estará sozinho, muito pelo contrário! Usando o R você terá apoio por todos os lados.\rExiste uma comunidade gigantesca que usa o R, então é muito fácil conseguir ajuda quando precisamos.\nTemos aqui um post específico sobre como pedir ajuda, quando você tiver alguma dúvida no R.\nComo pedir ajuda no R?\nOutra vantagem muito significante do tamanho da comunidade está relacionada ao 2º item deste artigo:\rmilhares de usuários desenvolvendo novas funcionalidades para o R é o que garante sua capilaridade em várias áreas.\nAfinal, é muito melhor milhares de especialistas contribuindo para a evolução do R do que apenas uma equipe restrita… Faz sentido? ;)\n\r4 - Facilmente adaptável\rVocê poderá facilmente adaptar e personalizar o que já existe para o seu próprio caso.\nAfinal, essa é uma das maiores vantagens dos programas que você precisa escrever o código e não são point and click (como o Excel, por exemplo).\nEntão, por mais que existem milhares de funções já prontas para serem usadas, você poderá fazer adaptações para atender as suas peculiaridades.\nGeralmente as funções já tem parâmetros que são facilmente ajustáveis para personalizar da sua maneira.\nPense se por exemplo você precisa fazer um gráfico para uma apresentação. Pelo R você conseguirá fazer gráficos com facilidade e totalmente personalizados, para eles ficarem com a cara da sua empresa.\nCaso queira fazer algo totalmente inovador, também é possível porque você pode programar a alteração que deseja.\n\r5 - Integrações com outros programas\rÉ simples integrar o R com outros programas.\nSe você quiser ler uma planilha de Excel, o R importará os dados com apenas uma linha de código.\nO mesmo vale para outras fontes. Se os seus dados estiverem em arquivo de texto, SQL, SPSS, SAS, Stata, etc.\nAlém disso, também é possível gerar vários relatórios customizáveis no R e salvar em “.docx” (Word) ou PDF, por exemplo.\nPara essas funcionalidades, você precisará de pacotes específicos. Para ver como instalar um pacote, dê uma olhada nesse outro artigo.\nComo instalar um pacote no R?\n\r6 - Muito material (organizado) sobre o R\rAssim que precisar de uma ajuda no R, você terá muitas fontes para recorrer.\nPara começar, dentro do R existe uma documentação completa e padronizada sobre cada pacote ou função que você precisar.\nCom apenas um simples comando você pode ver exatamente o que faz uma determinada função, quais os parâmetros deve usar e exemplos práticos de aplicação.\nNo melhor amigo do internauta, o Google, é possível achar praticamente tudo sobre R.\nTambém existem inúmeros cursos e livros para te ajudar especificamente na sua área de trabalho.\nAlém disso, existem listas de e-mail só para usuários de R que você pode participar.\n\r7 - Preço\rVocê sempre usará o R de graça. O R é um software livre e você não precisa pagar nada para usar sua versão completa.\nE aí, pronto para subir alguns degraus em sua carreira? Impressione o seu chefe com análises precisas e gráficos elegantes usando o R! :)\n\r","permalink":"/blog/principais-motivos-para-voce-usar-o-r/","tags":["R","RStudio","Primeiros passos"],"title":"7 principais motivos para você usar o R"},{"categories":["Post"],"contents":"\rQuer importar os seus dados em arquivo de texto ou csv para o RStudio de uma forma bem simples e sem precisar de programação?\nAlém disso, você vai aprender quatro formas específicas para importar os seus dados e quando usar cada uma das formas.\nEsses 4 métodos serão muito úteis quando você quiser importar várias tabelas usando um looping, por exemplo.\nOBS.: Se os seus dados tiverem salvos no Excel, você pode salvar a aba da sua planilha em um dos formatos de texto (txt ou csv) e seguir os passos deste post.\nOutra opção é ler os dados diretamente do Excel: temos outro post aqui explicando exatamente como fazer. Clique aqui para ver.\nMétodo GERAL – Como importar uma tabela em arquivo txt ou csv para o RStudio\rEsse método é muito simples, você não precisará escrever nenhuma linha de programação.\nApós aplicar esse método, você terá importado seus dados em segundos e, além disso, o R te mostrará qual o código ele executou para abrir a sua tabela! Ou seja, uma ótima oportunidade pra você entender melhor sobre a linguagem.\nPasso 1 - Na parte “Enviroment” clique em Import Dataset -\u0026gt; From Txt (readr)\rLembre-se que os seus dados devem estar salvos no formato txt ou csv.\n\r\rPara ler os dados vamos usar a biblioteca “readr”, então, caso você ainda não tenha ela instalada em seu computador, o RStudio irá solicitar a sua instalação.\n\rPasso 2 - Instale a biblioteca “readr”, caso ela já não esteja instalada\r\r\rClique em “Yes” e aguarde a instalação.\n\rPasso 3 - Ajustes para importar a sua tabela\r\r\rPrimeiramente, clique em “Browse” e selecione o arquivo que você deseje importar.\nUma pequena parte dos dados do arquivo que você selecionou irão aparecer na sua tela, para te auxiliar na importação.\nEntão, agora você precisa fazer alguns ajustes para o R ler o seu dataset.\nO ajuste mais importante é como as suas colunas estão separadas/delimitadas.\nÉ muito comum usar tabulação (tab), vírgula, ponto e vírgula ou espaço para separar as colunas de arquivos de texto.\nMas nessa parte da importação, você deve escolher exatamente o mesmo delimitador que já foi utilizado em seu arquivo.\nNessa seção, você também pode fazer vários outros ajustes, por exemplo:\n\rescolher o nome da tabela que será importada\n\rdefinir qual se os números decimais da sua tabela estão separados por ponto ou vírgula. No R o separador decimal é por ponto, então caso o seu arquivo use vírgula, o R saberá que deve transformar pra ficar dentro do padrão.\n\ralterar qual a codificação dos seus dados (ASCII, utf8, etc…)\n\rdefinir se a primeira linha dos seus dados é cabeçalho ou não\n\r\rNote que nessa etapa, na parte de “Code Preview”, o RStudio está mostrando exatamente o código que será executado para fazer a leitura dos seus dados.\nEsse código vai alterando a medida que você muda os ajustes! (ótima oportunidade para aprender e ir entendendo melhor o funcionamento da linguagem).\nApós realizar os ajustes necessários (que vão depender da sua própria tabela), clique em Import\nPronto, agora os seus dados foram importados.\nVocê pode conferir que a sua tabela irá aparecer em “Enviroment”. É só clicar nela para visualizar os dados!\n\r\rMétodos específicos - Como importar uma tabela em arquivo txt ou csv para o RStudio\r\r\rMétodo 1 – Ler aquivos txt no R quando usamos ponto para separar números decimais\rNesse método, vamos usar a função read.delim() para ler os dados delimitados por tabulação.\rPor padrão, a função considera que as suas colunas estão delimitados por tabulação (.\nmeus_dados \u0026lt;- read.delim(\u0026quot;nome_do_arquivo.txt\u0026quot;)\r\rMétodo 2 -Ler arquivos txt no R quando usamos vírgula para separar números decimais\rQuando a vírgula já está sendo usada para separar os números decimais, por exemplo: “10,3”, não podemos usar a vírgula também para separar as colunas.\nSenão não seria possível para o programa distinguir quando a vírgula está separando o decimal ou se trata de outra coluna.\nAs formas de separação das colunas mais usadas quando a vírgula é usada como separador decimal (muito comum no Brasil) são a tabulação (\") e o espaço.\nPara ler arquivos txt separados por tabulação ou espaço, vamos usar a função read.delim2().\nTeste com o nosso exemplo para ler dados delimitados por tabulação (:\nmy_data \u0026lt;-read.delim2(\u0026quot;http://www.sthda.com/upload/boxplot_format.txt\u0026quot;, sep=\u0026quot;\\t\u0026quot;)\rNo seu computador, você poderá ler o seu arquivo local com o seguinte código:\nmeus_dados \u0026lt;- read.delim2(\u0026quot;nome_do_seu_arquivo.txt\u0026quot;)\r(nesse último caso, como não especificamos o separador, o R irá considerar que o delimitador dos seus dados é espaço, que é o padrão da função read.delim2)\n\rMétodo 3 – Como ler um arquivo CSV\rPara ler os dados de um arquivo CSV, é muito simples.\nNesse método consideramos que os números decimais estão separados por ponto ou que seus dados não têm dados decimais.\nFaça um teste usando o nosso exemplo, execute a seguinte linha:\nmeus_dados \u0026lt;-read.csv(\u0026quot;http://www.sthda.com/upload/boxplot_format.csv\u0026quot;)\rNo seu computador, você poderá ler o seu arquivo local com o seguinte código:\nmeus_dados \u0026lt;- read.csv(\u0026quot;nome_do_seu_arquivo.csv\u0026quot;)\r\rMétodo 4 – Como ler um arquivo CSV\rAgora consideramos que os números decimais estão separados por vírgula.\nFaça um teste usando o nosso exemplo, execute a seguinte linha:\nmeus_dados \u0026lt;-read.csv2(\u0026quot;http://www.sthda.com/upload/boxplot_format.txt\u0026quot;)\rNo seu computador, você poderá ler o seu arquivo local com o seguinte código:\nmeus_dados \u0026lt;- read.csv2(\u0026quot;nome_do_seu_arquivo.csv\u0026quot;)\r\r\r","permalink":"/blog/como-ler-um-arquivo-de-texto-txt-ou-csv-no-r-ou-rstudio/","tags":["arquivo de texto","CSV","TXT"],"title":"Como ler um arquivo de texto (txt ou csv) no R ou RStudio"},{"categories":["Post"],"contents":"\rPrecisa importar seus dados de Excel usando o R ou o RStudio?\nNesse post você vai aprender três formas rápidas para ler dados do Excel.\nO seu arquivo pode estar nos fomatos xls ou xlsx, ambos funcionarão! :)\nMétodo 1 – Copiando os dados do Excel e importando para o R.\r1 – Abra o seu arquivo de Excel, selecione os dados que deseja copiar e copie os dados (Ctrl + C).\n2 – Execute o código abaixo para importar os dados copiados no Excel.\nmeus_dados \u0026lt;- read.table(file = \u0026quot;clipboard\u0026quot;, sep = \u0026quot;\\t\u0026quot;, header=TRUE)\rQuando copiamos os dados no Excel, eles ficam armazenados no clipboard do nosso computador, então o que estamos fazendo é falando para o R ler a tabela (função read.table) que estão no clipboard e atribuir essa tabela aos “meus_dados”.\n3 – Pronto!\n\rMétodo 2 – Importar arquivos do Excel sem usar programação\rAgora vamos ver como importar um arquivo do Excel para o R usando apenas o nosso mouse, é muito simples!\n1 - Na aba “Enviroment”, vamos clicar em Import Dataset e escolher From Excel.\n\r\r2 – Você provavelmente ainda não instalou o pacote readxl, então o RStudio vai te perguntar se deseja instalar o pacote. Confirme a instalação.\n\r\r3 - Aparecerá uma aba para você fazer a leitura dos dados desejados.\rClique em Browse para escolher o arquivo de Excel que você irá importar.\rDepois em Sheet escolha a aba de seu arquivo onde está a tabela que você quer importar.\n(Caso queira importar várias abas é só repetir os passos, importando uma aba de cada vez)\n\r\r4 – Clique em Import.\n\rMétodo 3 – Abrir os dados do Excel no R usando o pacote readxl\rEsse método é bem parecido com o segundo, porém aqui vamos usar linhas de código.\n1 - Caso você ainda não tenha instalado o pacote readxl, execute o seguinte comando:\ninstall.packages(\u0026quot;readxl\u0026quot;)\r2 - Vamos carregar o pacote que iremos usar (readxl):\rExecute o comando:\nlibrary(\u0026quot;readxl\u0026quot;)\r## Warning: package \u0026#39;readxl\u0026#39; was built under R version 3.6.3\r3 – Agora vamos buscar a planilha que você precisa usando a função read_excel.\nOs argumentos que vamos usar na função são:\no endereço e nome do seu arquivo;\ra aba da planilha que você quer ler.\r\rExcute o código:\nmeus_dados \u0026lt;- read_excel(\u0026quot;seu_arquivo.xlsx\u0026quot;, sheet = \u0026quot;nome da aba\u0026quot;)\r\rcaso o seu arquivo esteja na mesma pasta do seu projeto, você não precisa colocar todo o endereço do arquivo.\n\rEm sheet você pode colocar o nome da aba do Excel que você quer ler ou seu número (1, 2, 3, etc). Caso você coloque o número, não use aspas.\n\rEssa função serve tanto para arquivos xls como para xlsx.\n\r\rEscolha o seu método preferido entre os três!\nAgora que seus dados já estão no R, maos à obra!! Bons trabalhos!\n\r","permalink":"/blog/como-ler-planilha-excel-no-r/","tags":["Excel","R","RStudio"],"title":"Como ler sua planilha de excel no R"},{"categories":["Tutorial"],"contents":"\rEsse post vai te ensinar o que são os pacotes no R, como eles vão te ajudar e também como fazer para instalar. É muito fácil.\nO que são os pacotes do R?\rO R é um programa voltado principalmente para a Estatística. Como a Estatística é uma ciência extremamente ampla, são os pacotes que permitem o R ser um software tão completo!\nOlha só:\nO R é utilizado por pessoas da área de economia, previsões do tempo, área de saúde, demografia e várias outras…\nSendo que cada uma das áreas citadas ainda tem vários subnichos.\nEntão o que acontece é o seguinte:\nexistem milhares de pessoas ao redor do mundo que são muito boas em suas áreas e criam pacotes dentro do R para atender demandas específicas. Que, geralmente, ainda não tinham sido solucionadas de forma eficaz.\nIsso só é possível porque o R é um software Open Source. Isso significa que as pessoas podem contribuir para melhorar as funcionalidades do programa! Com certeza, isso é determinante para o R ser tão completo.\nO que estou falando é que se um especialista da sua área de uma universidade renomada publica um pacote no R, ele estará disponível para você usar no seu computador! Gratuitamente.\nAgora que você já entendeu o contexto, vamos definir o que é um pacote do R:\nUm Pacote é um conjunto de funções dentro do R, geralmente relacionados a um tema específico. Mais pra frente vou dar alguns exemplos.\nAlém disso, os pacotes também têm uma documentação. Essa documentação explica para o que serve cada função do pacote. Te explica como usar cada função e ainda fornece exemplos práticos de uso.\nTambém é comum que os pacotes tenham tabelas de dados relacionados ao pacote.\n\rComo instalar um pacote no R ou Rstudio\rQuando fazemos o download do R, também já estamos baixando os pacotes considerados básicos.\nMas muitas vezes você vai precisar de um pacote específico, pode ser para fazer um gráfico mais bonito, para trabalhar com datas de uma forma mais eficiente ou para trabalhar com mais qualidade com o próprio tema do seu projeto.\nE para isso vamos fazer o download desse pacote, é muito simples!\nO ggplot2 é um pacote muito usado para fazer gráficos mais elaborados, com grande capacidade de personalização.\nVamos usá-lo aqui como exemplo.\nExistem duas maneiras muito simples para instalar um pacote. Escolha a sua preferida!\n1 – Usando o botão de instalação\rEssa forma é muito intuitiva, clique na aba “Packages” (veja na imagem) e depois em “Install”.\rIrá abrir uma tela para você escolher o pacote que deseja instalar.\n\r\rEscreva o nome o pacote e clique em “Install”. Simples assim! Mas ainda falta um detalhe…\n\r\rAgora o pacote já está instalado no R, em sua biblioteca.\nMas falta um detalhe, precisamos ir lá na biblioteca e buscar esse pacote!\nPara carregar qualquer pacote de sua biblioteca (alguns já estão carregados por padrão), basta executar o seguinte código:\nlibrary(ggplot2) #Esse exemplo irá carregar o pacote ggplot2, #então coloque o nome do pacote que você instalou e deseja carregar.\r\r2 – Usando o comando de instalação\rO primeiro passo é escrever o comando install.packages(\"ggplot2\") e rodar o código!\n\r\rPara rodar qualquer código, você poder escrevê-lo no editor e pressionar Crtl + R ou clicar em Run.\nO cursor do mouse deve estar na linha que você deseja executar ou então selecione todo o código que você deseja executar (útil para rodar várias linhas de uma vez).\nExecute o código:\ninstall.packages(\u0026quot;ggplot2\u0026quot;) #Esse exemplo irá instalar o pacote ggplot2, # então coloque o nome do pacote que você deseja instalar.\rDepois que o código for executado, o pacote será instalado.\nIsso quer dizer que o pacote está instalado no R, em sua biblioteca.\nMas falta um detalhe, precisamos ir lá na biblioteca e buscar esse pacote!\nPara carregar qualquer pacote de sua biblioteca (alguns já estão carregados por padrão), basta executar o seguinte código:\nlibrary(\u0026quot;ggplot2\u0026quot;) #Esse exemplo irá carregar o pacote ggplot2,\r# então coloque o nome do pacote que você instalou e deseja carregar.\rÉ isso, agora que você já sabe como instalar e carregar um pacote no R, vamos conhecer algumas das principais bibliotecas.\n\r\rLista de pacotes do R - Exemplos\rComo tinha prometido no começo, vou dar alguns exemplos de pacotes e seus objetivos principais.\nManipulação de dados\r\rdplyr – Manipulação de dados de forma simples e rápida.\rlubridate – Ferramentas para facilitar o trabalho com datas e horas.\r\r\rVisualização de dados\r\rggplot2 – Para fazer gráficos bonitos e customizáveis\rggvis – Gráficos interativos com o usuário\rrgl – Visualizações interativas no R\rshiny – Gráficos interativos com o usuário – Permite até a construção de site.\r\r\rModelagem de dados\r\rCaret – ferramentas para modelos de regressão e classificação (Machine Learning)\rrandomForest – Métodos de Random Forest (Machine Learning)\rSurvival – Ferramentas para análise de sobrevivência\r\r\rSeries Temporais e Finanças\r\rxts – Ferramentas para manipular Séries Temporais.\r\r\r\r","permalink":"/blog/como-instalar-um-pacote-no-r/","tags":["R","RStudio","Pacote"],"title":"Como instalar um pacote no R"},{"categories":["Tutorial"],"contents":"\rO que faz o R ser um dos mais conhecidos e potentes softwares de Estatística com certeza é a sua comunidade.\nA comunidade são todas as pessoas que usam e contribuem com o R.\nComo já falamos aqui, o R é um software Open Source. Isso quer dizer que os usuários (incluindo você) podem contribuir no desenvolvimento do programa.\nA comunidade do R é extremamente ativa! Isso faz que seja muito provável já existir um pacote com a função específica que você precisa (porque alguém já desenvolveu).\nEntão, quando um expert da sua área criar e publicar um pacote no R voltado para a sua área de atuação, você poderá usufruir de todo esse trabalho que ele construiu. Com o tempo, você vai ver o tanto que isso vai facilitar a sua vida.\nOutro benefício enorme de uma comunidade ativa é o auxílio quando precisamos de ajuda. É muito fácil solucionar nossas dúvidas com essa ajuda externa.\nAlém disso, o R possui uma ajuda interna.\nVocê pode seguir a seguinte direção quando precisar de ajuda:\nVocê já sabe qual o pacote e função precisa usar?\rSe esse é o seu caso, a ajuda do próprio R será suficiente.\nTodos os pacotes possuem uma documentação explicando como usar o pacote e cada função, com exemplos!\nAjuda para usar uma função:\nPara tirar suas dúvidas sobre uma função específica, você deve ter certeza que o pacote da função está carregado no R.\nExemplo: A função arrange está dentro do pacote \"dplyr\" e serve para ordenar as linhas de uma tabela de acordo com os valores de uma variável (coluna). O que eu faço se preciso pedir ajuda para usar essa função?\nBasta carregar o pacote \"dplyr\" rodando o seguinte comando: library(dplyr) e depois digitar diretamente no Console: ?arrange e rodar o comando.\nEntão vai abrir uma tela de ajuda, explicando tudo sobre a função arrange.\nO texto de ajuda das funções estará estruturado com as seguintes partes principais:\n\rDescription – com uma breve descrição da função\rUsage – como está estruturada a função e o que você precisa informar para calcular o que deseja\rArguments – informações sobre cada INPUT que você precisa colocar na função.\rExamples – Casos práticos de uso da função e que são reproduzíveis no seu computador.\r\r\rE se você não sabe nem a função que deseja usar?\rNesse caso, a melhor forma é pedir ajuda para o Google! :)\nColoque no Google:\nR + palavras chaves do que você deseja fazer\nDica: se você ficar a busca em inglês, irá aumentar as suas chances de achar uma resposta rapidamente. Já que o mundo inteiro poderá te ajudar…\n\rO melhor site de ajuda para o R\rO site Stack OverFlow é um site de perguntas e respostas usado por programadores. É uma plataforma excepcional e que certamente irá te ajudar muito nessa caminhada.\nQuando você fizer a busca no Google (passo anterior), provavelmente verá que os primeiros resultados da busca são do Stack OverFlow.\nDê preferência aos resultados do Stack OverFlow. Certamente vão te ajudar muito.\nE se você não achar a resposta de jeito nenhum para a sua dúvida?\nSe a sua pergunta ainda não estiver lá no Stack OverFlow, você pode criar a sua pergunta e, em pouco tempo, é provável que o pessoal te responda.\n*Como fazer uma boa pergunta no Stack OverFlow?\nVeja as dicas do próprio site. CLIQUE AQUI.\nAlém das dicas que já estão nesse link, tente colocar um exemplo que a pessoa possa reproduzir no computador dela. Isso irá facilitar para o pessoa entender qual é exatamente a sua dúvida.\nEssas são as principais formas de conseguir ajuda no R. Agora mãos à obra!\n\r","permalink":"/blog/como-conseguir-ajuda-no-r/","tags":["R","Ajuda","RStudio"],"title":"Como conseguir ajuda no R?"},{"categories":["Tutorial"],"contents":"\rNos passos a seguir você vai ver como é simples instalar o R e o Rstudio.\nO Rstudio é o ambiente que vamos usar R.\nIsso significa que ele vai deixar o R mil vezes mais fácil de mexer, organizado e funcional.\nPode ter certeza que você precisa dele!\nParte 1 – Instalar o R no Windows\rVamos fazer o download do R diretamente do seu próprio site. CLIQUE AQUI.\n\rApós entrar no site do R, clique em Download R X.X.X for Windows.\n\r\r(No lugar dos Xs, vai aparecer o número da última versão.)\n\r\rEscolha a pasta que deseja salvar o programa. O padrão é que seja salvo na pasta de Downloads.\n\rAbra a pasta em que o programa foi salvo e clique duas vezes no ícone do programa R.\n\rEscolha o seu idioma de preferência.\n\r\r\r\rClique em próximo nas opções seguintes até iniciar a instalação e, quando finalizar, clique em concluir.\r\r\r\rParabéns, o R já está instalado. Mas agora ainda falta o RStudio, nosso melhor amigo!\r\r\rParte 2 – Instalação do RStudio\rClique aqui para entrar no site do RStudio e fazer o download.\n\rClique na versão para Windows.\n\r\r\r\rEscolha a pasta que deseja salvar o programa. O padrão é que seja salvo na pasta de Downloads.\n\rAbra a pasta em que o programa foi salvo e dê dois cliques no ícone do programa.\n\rClique em “Próximo” e siga o fluxo da instalação. Quando finalizar, clique em Terminar.\n\r\r\r\rPonto. Parabéns! Agora é só procurar pelo RStudio na barra iniciar, abrir o programa e apreciar essa belezura. Veja os primeiros passos no RStudio clicando aqui.\r\r\r\r\r","permalink":"/blog/como-instalar-o-r-e-o-rstudio/","tags":["Primeiros passos","Instalação","R","RStudio"],"title":"Como instalar o R e o Rstudio"},{"categories":["Tutorial"],"contents":"\rEsse post vai te ensinar rapidinho como criar o seu primeiro projeto no RStudio e vai te explicar para o que serve cada parte do programa.\nO primeiro passo é criar um novo Projeto.\rO que é um Projeto no RStudio?\rO Projeto é o espaço que irá reunir tudo que for desenvolvido com um mesmo objetivo.\nOlha só:\nVocê cria um projeto no RStudio para desenvolver atividades dentro de um determinado contexto, por exemplo: uma pesquisa da universidade, um estudo para o seu trabalho, uma análise de consultoria, etc.\nEntão, contextos diferentes, exigem projetos diferentes (para sua própria organização).\nEm seu projeto, você vai conseguir ver todos os códigos que você desenvolveu, todas as tabelas que você está usando, os seus resultados, arquivos, etc.\nEntão vamos criar o nosso primeiro projeto?\nÉ muito fácil, clique em “File” e depois “New Project”, depois disso vai aparecer essa tela:\n\r\rSe você quiser criar uma nova pasta para guardar todos os arquivos do seu projeto, clique em “New Directory”. Se quiser usar uma pasta que já existe, clique na opção “Existing Directory”.\nSe você escolheu criar uma nova pasta, agora clique em “New Project”.\n\r\rAgora é só dar um nome para o seu projeto, escolher onde vai salvá-lo e clicar em “Create Project”. Pronto! :)\nNossos primeiros passos dentro do nosso Projeto – por dentro do RStudio.\nQuando abrimos o RStudio, notamos que a tela está dividida em 4 partes: Editor, Console, Ambiente e Output.\n\r\rVou te explicar pra que serve cada uma das partes e como elas vão facilitar nossa vida!\nEDITOR\rEssa é a parte onde vamos escrever o nosso código.\rPara rodar um código escrito no editor, basta deixar o cursor do mouse na linha que você deseja rodar e apertar o botão “run” ou CTRL + Enter. Você também pode selecionar várias linhas e executá-lo da mesma forma.\nOs códigos serão salvos como arquivos comuns e tem a extensão “.R”.\nQuando criarmos um novo código, que não tem relação com o primeiro, podemos criar um novo arquivo. Assim fica tudo mais organizado. Nesse caso, cada arquivo vai ser uma aba no editor.\nNo editor, você vai escrever o seu código e também pode fazer comentários. O comentário é simplesmente para te lembrar o que você fez ali, caso você volte a ver o código alguns dias depois. Os comentários devem ser escritos depois do “#”.\nAssim o R irá saber que aquilo não é um código.\n\rCONSOLE\rAqui é onde você vê a mágica acontecendo.\nNo console vemos o código rodando e o que está acontecendo.\nVocê poderá ver aqui as respostas que serão geradas pelo seu código e também mensagens do R para você.\nPor exemplo, se tiver algum erro no seu código ou algum alerta do R, ele te irá escrever uma mensagem para você aqui no console. Essas mensagens aparecem em vermelho.\nTambém é possível colocar o seu código diretamente no Console e apertar Enter para ele rodar. Mas fazendo isso você acaba perdendo em organização.\n\rAMBIENTE\rNa aba ambiente, conseguimos ver as nossas fontes de dados e o resultados que já conseguimos com o nosso código.\nEntão se você tiver importado uma tabela do Excel, ela vai ficar descrita aqui. E basta você clicar nela para ela abrir dentro do próprio R.\nSe você tiver feito um cálculo e guardado o resultado em uma variável, vai aparecer aqui também!\nNessa parte também temos o botão “Import Dataset”, ele nos ajuda muito quando queremos usar uma tabela que está fora do R.\nPor exemplo: uma tabela do excel, em csv, txt ou vários outros formatos…\n\rOUTPUT\rNessa última parte, temos algumas abas: Files, Plots, Packages, Help e Viewer.\nNa aba Files, o RStudio nos mostra os arquivos que estão na pasta que estamos com o nosso projeto aberto.\nNa aba Plots, podemos ver os gráficos que geramos com o nosso código. Podemos usar as setinhas para passar os gráficos quando tivermos mais de um.\nA aba Packages é muito útil para instalarmos ou atualizarmos os pacotes do R. Para saber mais o que são os Pacotes, CLIQUE AQUI.\nA aba Help será um grande amigo, ela serve para tirar as nossas dúvidas. Lá descreve cada pacote do R, fala para o que serve e também como utilizar cada função.\nAlém disso, no final da descrição de cada função, sempre tem exemplos de uso. Os exemplos nos ajudam muito no aprendizado.\n\r","permalink":"/blog/primeiros-passos-com-o-r-usando-o-rstudio/","tags":["Primeiros passos","R","RStudio"],"title":"Os primeiros passos com o R - usando o Rstudio"},{"categories":[],"contents":"\rQuer ter certeza que você vai receber o e-mail que vou te enviar?\nAdicione o e-mail contato@luisotavio.pro aos seus contatos!\nEu nunca vou te enviar SPAM, mas esse procedimento é importante para o seu e-mail saber disso!\nClique aqui para voltar a navegar no Blog.\n","permalink":"/confirmacao/","tags":[],"title":"A sua inscrição foi confirmada!"},{"categories":[],"contents":"\rAqui eu coloco o conteúdo!\n","permalink":"/meulayout/","tags":[],"title":"Meu Layout"},{"categories":[],"contents":"\rOpa! Muito obrigado pela sua mensagem!\nAssim que der já vou dar uma olhada e te responder.\nClique aqui para voltar a navegar no Blog.\n","permalink":"/confirmacao-formulario/","tags":[],"title":"Sua mensagem foi enviada!"},{"categories":null,"contents":"\rAntes de mais nada, eu preciso começar te contando que esse blog foi desenvolvido no R, a linguagem estatística que uso e falo em provavelmente todos os posts.\nE porque isso é tão importante?\nEu já usei poucas linguagens de programação, mas tenho certeza que o R não é a linguagem mais usada para construir blogs.\nAliás, hoje já existem várias e várias ferramentas para construir sites excelentes sem nenhuma linha de código.\nMas, mesmo não sendo a forma mais fácil ou a mais indicada por desenvolvedores de site, fez um sentido enorme para mim construir o meu próprio blog no R.\nFaz parte do meu propósito escrever aqui sobre o que faz parte da vida real da minha vida como cientista de dados e sobre o que eu uso no meu dia a dia.\nAtualmente, a maior parte do meu tempo é dedicada ao site gurudocartola.com. A ideia inicial do projeto era aplicar Machine Learning no futebol, mais especificamente no fantasy game da Globo, o Cartola.\nComecei a trabalhar nesse projeto em agosto de 2016 e lancei o site em 10 de maio de 2017.\nDesde então, foram várias aventuras, várias noites viradas. Depois de muitos meses trabalhando de 12 a 18 horas por dia, o projeto teve uma evolução significativa.\nAté o momento que escrevo esse texto, 2.697.741 usuários únicos já visitaram o site e puderam usar as nossas estatísticas.\nE o que eu fazia antes de decidir abrir o Guru do Cartola?\nEu formei em Estatística em dezembro de 2010 e na mesma época passei em um concurso como Estatístico na Força Aérea Brasileira. Fiz um treinamento militar e fui designado para servir no Centro de Inteligência da Aeronáutica, em Brasília. Lá eu fui o responsável por coordenar os cursos a distância do Centro de Inteligência.\nNo meio de 2012, me mudei para São Paulo. Fiquei cerca de 1 ano e meio, trabalhando no TRE-SP. Nessa época, evolui muito como usuário do R e como Estatístico.\nCriei o planejamento amostral e a metodologia completa para fazermos uma pesquisa de opinião com o eleitorado de cada Zona Eleitoral de São Paulo. Além disso, montei um treinamento para as 425 Zonas Eleitorais realizarem as pesquisas.\rEntão, achei uma forma de automatizar relatórios com os resultados personalizados da pesquisa para cada uma usando o R + VBA.\nSe fosse hoje, já daria pra fazer tudo no R tranquilamente!\nEm 2014, voltei para Brasília. Desta vez para trabalhar na Agência Nacional de Transportes Terrestres. Nessa mesma época conclui minha formação como Data Scientist pela John Hopkins University. E, sinceramente, valeu muito mais do que os 4 anos de Estatística na UFMG.\nA partir daí cresceu muito o meu interesse por Machine Learning, Data Visualization, Business Intelligence e também Webscraping.\nA partir de outubro de 2018 comecei a me dedicar integralmente ao projeto Guru do Cartola e a partir de fevereiro de 2020 também pretendo fazer postagens constantes aqui no luisotavio.pro.\nMeu objetivo é sempre gerar conteúdo 100% útil para quem deseja aplicar a Ciência de Dados no trabalho. De teoria já basta os anos que perdemos na faculdade…\nComo você está aqui, espero que eu possa te ajudar!\nCaso você queira acompanhar mais sobre o meu trabalho, me siga nas redes sociais ou me envie uma mensagem pela página de contato e vamos nos falando.\nUm abraço!\nLuís Otávio\n","permalink":"/about/about/","tags":null,"title":"Sobre mim"}]